["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/dnd-core-cjs/lib/contracts.js"],"~:js","shadow$provide.module$node_modules$dnd_core_cjs$lib$contracts=function(global,require,module,exports){function validateType(type,allowArray){allowArray&&Array.isArray(type)?type.forEach(function(t){return validateType(t,!1)}):invariant_1.default(\"string\"===typeof type||\"symbol\"===typeof type,allowArray?\"Type can only be a string, a symbol, or an array of either.\":\"Type can only be a string or a symbol.\")}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};\nObject.defineProperty(exports,\"__esModule\",{value:!0});var invariant_1=global(require(\"module$node_modules$invariant$browser\"));exports.validateSourceContract=function(source){invariant_1.default(\"function\"===typeof source.canDrag,\"Expected canDrag to be a function.\");invariant_1.default(\"function\"===typeof source.beginDrag,\"Expected beginDrag to be a function.\");invariant_1.default(\"function\"===typeof source.endDrag,\"Expected endDrag to be a function.\")};exports.validateTargetContract=function(target){invariant_1.default(\"function\"===\ntypeof target.canDrop,\"Expected canDrop to be a function.\");invariant_1.default(\"function\"===typeof target.hover,\"Expected hover to be a function.\");invariant_1.default(\"function\"===typeof target.drop,\"Expected beginDrag to be a function.\")};exports.validateType=validateType}","~:source","shadow$provide[\"module$node_modules$dnd_core_cjs$lib$contracts\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = __importDefault(require(\"invariant\"));\nfunction validateSourceContract(source) {\n    invariant_1.default(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n    invariant_1.default(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n    invariant_1.default(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\nexports.validateSourceContract = validateSourceContract;\nfunction validateTargetContract(target) {\n    invariant_1.default(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n    invariant_1.default(typeof target.hover === 'function', 'Expected hover to be a function.');\n    invariant_1.default(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\nexports.validateTargetContract = validateTargetContract;\nfunction validateType(type, allowArray) {\n    if (allowArray && Array.isArray(type)) {\n        type.forEach(function (t) { return validateType(t, false); });\n        return;\n    }\n    invariant_1.default(typeof type === 'string' || typeof type === 'symbol', allowArray\n        ? 'Type can only be a string, a symbol, or an array of either.'\n        : 'Type can only be a string or a symbol.');\n}\nexports.validateType = validateType;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$invariant$browser","~$shadow.js"]],"~:properties",["^5",["validateSourceContract","__esModule","value","validateTargetContract","validateType"]],"~:compiled-at",1589100101358,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$dnd_core_cjs$lib$contracts.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmB3GC,QAASA,aAAY,CAACC,IAAD,CAAOC,UAAP,CAAmB,CAChCA,UAAJ,EAAkBC,KAAAC,QAAA,CAAcH,IAAd,CAAlB,CACIA,IAAAI,QAAA,CAAa,QAAS,CAACC,CAAD,CAAI,CAAE,MAAON,aAAA,CAAaM,CAAb,CAAgB,CAAA,CAAhB,CAAT,CAA1B,CADJ,CAIAC,WAAAC,QAAA,CAAoC,QAApC,GAAoB,MAAOP,KAA3B,EAAgE,QAAhE,GAAgD,MAAOA,KAAvD,CAA0EC,UAAA,CACpE,6DADoE,CAEpE,wCAFN,CALoC,CAjBpCO,MAAAA,CAAmB,IAAnBA,EAA2B,IAAAA,gBAA3BA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAAC,WAAR,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE;MAAAC,eAAA,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAAEe,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIP,YAAcE,MAAA,CAAgBZ,OAAA,CAAQ,uCAAR,CAAhB,CAMlBE,QAAAgB,uBAAA,CALAA,QAA+B,CAACC,MAAD,CAAS,CACpCT,WAAAC,QAAA,CAA8C,UAA9C,GAAoB,MAAOQ,OAAAC,QAA3B,CAA0D,oCAA1D,CACAV,YAAAC,QAAA,CAAgD,UAAhD,GAAoB,MAAOQ,OAAAE,UAA3B,CAA4D,sCAA5D,CACAX,YAAAC,QAAA,CAA8C,UAA9C,GAAoB,MAAOQ,OAAAG,QAA3B,CAA0D,oCAA1D,CAHoC,CAWxCpB,QAAAqB,uBAAA,CALAA,QAA+B,CAACC,MAAD,CAAS,CACpCd,WAAAC,QAAA,CAA8C,UAA9C;AAAoB,MAAOa,OAAAC,QAA3B,CAA0D,oCAA1D,CACAf,YAAAC,QAAA,CAA4C,UAA5C,GAAoB,MAAOa,OAAAE,MAA3B,CAAwD,kCAAxD,CACAhB,YAAAC,QAAA,CAA2C,UAA3C,GAAoB,MAAOa,OAAAG,KAA3B,CAAuD,sCAAvD,CAHoC,CAexCzB,QAAAC,aAAA,CAAuBA,YA5BoF;\",\n\"sources\":[\"node_modules/dnd-core-cjs/lib/contracts.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$dnd_core_cjs$lib$contracts\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar invariant_1 = __importDefault(require(\\\"invariant\\\"));\\nfunction validateSourceContract(source) {\\n    invariant_1.default(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\\n    invariant_1.default(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\\n    invariant_1.default(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\\n}\\nexports.validateSourceContract = validateSourceContract;\\nfunction validateTargetContract(target) {\\n    invariant_1.default(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\\n    invariant_1.default(typeof target.hover === 'function', 'Expected hover to be a function.');\\n    invariant_1.default(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\\n}\\nexports.validateTargetContract = validateTargetContract;\\nfunction validateType(type, allowArray) {\\n    if (allowArray && Array.isArray(type)) {\\n        type.forEach(function (t) { return validateType(t, false); });\\n        return;\\n    }\\n    invariant_1.default(typeof type === 'string' || typeof type === 'symbol', allowArray\\n        ? 'Type can only be a string, a symbol, or an array of either.'\\n        : 'Type can only be a string or a symbol.');\\n}\\nexports.validateType = validateType;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"validateType\",\"type\",\"allowArray\",\"Array\",\"isArray\",\"forEach\",\"t\",\"invariant_1\",\"default\",\"__importDefault\",\"mod\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"validateSourceContract\",\"source\",\"canDrag\",\"beginDrag\",\"endDrag\",\"validateTargetContract\",\"target\",\"canDrop\",\"hover\",\"drop\"]\n}\n"]