["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dnd-cjs/lib/hooks/internal/drag.js"],"~:js","shadow$provide.module$node_modules$react_dnd_cjs$lib$hooks$internal$drag=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};Object.defineProperty(exports,\"__esModule\",{value:!0});var react_1=require(\"module$node_modules$react$index\"),invariant_1=global(require(\"module$node_modules$invariant$browser\")),registration_1=require(\"module$node_modules$react_dnd_cjs$lib$common$registration\"),useDragDropManager_1=require(\"module$node_modules$react_dnd_cjs$lib$hooks$internal$useDragDropManager\"),\nDragSourceMonitorImpl_1=require(\"module$node_modules$react_dnd_cjs$lib$common$DragSourceMonitorImpl\"),SourceConnector_1=require(\"module$node_modules$react_dnd_cjs$lib$common$SourceConnector\"),useIsomorphicLayoutEffect_1=require(\"module$node_modules$react_dnd_cjs$lib$hooks$internal$useIsomorphicLayoutEffect\");exports.useDragSourceMonitor=function(){var manager=useDragDropManager_1.useDragDropManager(),monitor=react_1.useMemo(function(){return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager)},\n[manager]),connector=react_1.useMemo(function(){return new SourceConnector_1.SourceConnector(manager.getBackend())},[manager]);return[monitor,connector]};exports.useDragHandler=function(spec,monitor,connector){var manager=useDragDropManager_1.useDragDropManager(),handler=react_1.useMemo(function(){return{beginDrag:function(){var _a=spec.current,begin=_a.begin;_a=_a.item;return begin?(begin=begin(monitor),invariant_1.default(null==begin||\"object\"===typeof begin,\"dragSpec.begin() must either return an object, undefined, or null\"),\nbegin||_a||{}):_a||{}},canDrag:function(){return\"boolean\"===typeof spec.current.canDrag?spec.current.canDrag:\"function\"===typeof spec.current.canDrag?spec.current.canDrag(monitor):!0},isDragging:function(globalMonitor,target){var isDragging=spec.current.isDragging;return isDragging?isDragging(monitor):target===globalMonitor.getSourceId()},endDrag:function(){var end=spec.current.end;end&&end(monitor.getItem(),monitor);connector.reconnect()}}},[]);useIsomorphicLayoutEffect_1.useIsomorphicLayoutEffect(function(){var _a=\nregistration_1.registerSource(spec.current.item.type,handler,manager),handlerId=_a[0];_a=_a[1];monitor.receiveHandlerId(handlerId);connector.receiveHandlerId(handlerId);return _a},[])}}","~:source","shadow$provide[\"module$node_modules$react_dnd_cjs$lib$hooks$internal$drag\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar registration_1 = require(\"../../common/registration\");\nvar useDragDropManager_1 = require(\"./useDragDropManager\");\nvar DragSourceMonitorImpl_1 = require(\"../../common/DragSourceMonitorImpl\");\nvar SourceConnector_1 = require(\"../../common/SourceConnector\");\nvar useIsomorphicLayoutEffect_1 = require(\"./useIsomorphicLayoutEffect\");\nfunction useDragSourceMonitor() {\n    var manager = useDragDropManager_1.useDragDropManager();\n    var monitor = react_1.useMemo(function () { return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager); }, [manager]);\n    var connector = react_1.useMemo(function () { return new SourceConnector_1.SourceConnector(manager.getBackend()); }, [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexports.useDragSourceMonitor = useDragSourceMonitor;\nfunction useDragHandler(spec, monitor, connector) {\n    var manager = useDragDropManager_1.useDragDropManager();\n    var handler = react_1.useMemo(function () {\n        return {\n            beginDrag: function () {\n                var _a = spec.current, begin = _a.begin, item = _a.item;\n                if (begin) {\n                    var beginResult = begin(monitor);\n                    invariant_1.default(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n                    return beginResult || item || {};\n                }\n                return item || {};\n            },\n            canDrag: function () {\n                if (typeof spec.current.canDrag === 'boolean') {\n                    return spec.current.canDrag;\n                }\n                else if (typeof spec.current.canDrag === 'function') {\n                    return spec.current.canDrag(monitor);\n                }\n                else {\n                    return true;\n                }\n            },\n            isDragging: function (globalMonitor, target) {\n                var isDragging = spec.current.isDragging;\n                return isDragging\n                    ? isDragging(monitor)\n                    : target === globalMonitor.getSourceId();\n            },\n            endDrag: function () {\n                var end = spec.current.end;\n                if (end) {\n                    end(monitor.getItem(), monitor);\n                }\n                connector.reconnect();\n            },\n        };\n    }, []);\n    useIsomorphicLayoutEffect_1.useIsomorphicLayoutEffect(function registerHandler() {\n        var _a = registration_1.registerSource(spec.current.item.type, handler, manager), handlerId = _a[0], unregister = _a[1];\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, []);\n}\nexports.useDragHandler = useDragHandler;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dnd_cjs$lib$common$SourceConnector","~$module$node_modules$invariant$browser","~$module$node_modules$react_dnd_cjs$lib$hooks$internal$useDragDropManager","~$module$node_modules$react_dnd_cjs$lib$hooks$internal$useIsomorphicLayoutEffect","~$module$node_modules$react_dnd_cjs$lib$common$registration","~$module$node_modules$react$index","~$module$node_modules$react_dnd_cjs$lib$common$DragSourceMonitorImpl","~$shadow.js"]],"~:properties",["^5",["useDragSourceMonitor","beginDrag","isDragging","endDrag","__esModule","value","useDragHandler","canDrag"]],"~:compiled-at",1589100101382,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dnd_cjs$lib$hooks$internal$drag.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAElHC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAAA,gBAA3BA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAAC,WAAR,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUT,OAAA,CAAQ,iCAAR,CAAd,CACIU,YAAcP,MAAA,CAAgBH,OAAA,CAAQ,uCAAR,CAAhB,CADlB,CAEIW,eAAiBX,OAAA,CAAQ,2DAAR,CAFrB,CAGIY,qBAAuBZ,OAAA,CAAQ,yEAAR,CAH3B;AAIIa,wBAA0Bb,OAAA,CAAQ,oEAAR,CAJ9B,CAKIc,kBAAoBd,OAAA,CAAQ,8DAAR,CALxB,CAMIe,4BAA8Bf,OAAA,CAAQ,gFAAR,CASlCE,QAAAc,qBAAA,CARAA,QAA6B,EAAG,CAC5B,IAAIC,QAAUL,oBAAAM,mBAAA,EAAd,CACIC,QAAUV,OAAAW,QAAA,CAAgB,QAAS,EAAG,CAAE,MAAO,KAAIP,uBAAAQ,sBAAJ,CAAkDJ,OAAlD,CAAT,CAA5B;AAAoG,CAACA,OAAD,CAApG,CADd,CAEIK,UAAYb,OAAAW,QAAA,CAAgB,QAAS,EAAG,CAAE,MAAO,KAAIN,iBAAAS,gBAAJ,CAAsCN,OAAAO,WAAA,EAAtC,CAAT,CAA5B,CAAqG,CACjHP,OADiH,CAArG,CAGhB,OAAO,CAACE,OAAD,CAAUG,SAAV,CANqB,CAuDhCpB,QAAAuB,eAAA,CA9CAA,QAAuB,CAACC,IAAD,CAAOP,OAAP,CAAgBG,SAAhB,CAA2B,CAC9C,IAAIL,QAAUL,oBAAAM,mBAAA,EAAd,CACIS,QAAUlB,OAAAW,QAAA,CAAgB,QAAS,EAAG,CACtC,MAAO,CACHQ,UAAWA,QAAS,EAAG,CAAA,IACfC,GAAKH,IAAAI,QADU,CACIC,MAAQF,EAAAE,MAAUC,GAAAA,CAAOH,EAAAG,KAChD,OAAID,MAAJ,EACQE,KAEG,CAFWF,KAAA,CAAMZ,OAAN,CAEX,CADPT,WAAAwB,QAAA,CAAmC,IAAnC,EAAoBD,KAApB,EAAkE,QAAlE,GAA2C,MAAOA,MAAlD,CAA4E,mEAA5E,CACO;AAAAA,KAAA,EAAeD,EAAf,EAAuB,EAHlC,EAKOA,EALP,EAKe,EAPI,CADpB,CAUHG,QAASA,QAAS,EAAG,CACjB,MAAoC,SAApC,GAAI,MAAOT,KAAAI,QAAAK,QAAX,CACWT,IAAAI,QAAAK,QADX,CAGyC,UAApC,GAAI,MAAOT,KAAAI,QAAAK,QAAX,CACMT,IAAAI,QAAAK,QAAA,CAAqBhB,OAArB,CADN,CAIM,CAAA,CARM,CAVlB,CAqBHiB,WAAYA,QAAS,CAACC,aAAD,CAAgBC,MAAhB,CAAwB,CACzC,IAAIF,WAAaV,IAAAI,QAAAM,WACjB,OAAOA,WAAA,CACDA,UAAA,CAAWjB,OAAX,CADC,CAEDmB,MAFC,GAEUD,aAAAE,YAAA,EAJwB,CArB1C,CA2BHC,QAASA,QAAS,EAAG,CACjB,IAAIC,IAAMf,IAAAI,QAAAW,IACNA,IAAJ,EACIA,GAAA,CAAItB,OAAAuB,QAAA,EAAJ,CAAuBvB,OAAvB,CAEJG,UAAAqB,UAAA,EALiB,CA3BlB,CAD+B,CAA5B,CAoCX,EApCW,CAqCd5B,4BAAA6B,0BAAA,CAAsDC,QAAwB,EAAG,CAAA,IACzEhB;AAAKlB,cAAAmC,eAAA,CAA8BpB,IAAAI,QAAAE,KAAAe,KAA9B,CAAsDpB,OAAtD,CAA+DV,OAA/D,CADoE,CACK+B,UAAYnB,EAAA,CAAG,CAAH,CAAOoB,GAAAA,CAAapB,EAAA,CAAG,CAAH,CAClHV,QAAA+B,iBAAA,CAAyBF,SAAzB,CACA1B,UAAA4B,iBAAA,CAA2BF,SAA3B,CACA,OAAOC,GAJsE,CAAjF,CAKG,EALH,CAvC8C,CAtBoE;\",\n\"sources\":[\"node_modules/react-dnd-cjs/lib/hooks/internal/drag.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dnd_cjs$lib$hooks$internal$drag\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar react_1 = require(\\\"react\\\");\\nvar invariant_1 = __importDefault(require(\\\"invariant\\\"));\\nvar registration_1 = require(\\\"../../common/registration\\\");\\nvar useDragDropManager_1 = require(\\\"./useDragDropManager\\\");\\nvar DragSourceMonitorImpl_1 = require(\\\"../../common/DragSourceMonitorImpl\\\");\\nvar SourceConnector_1 = require(\\\"../../common/SourceConnector\\\");\\nvar useIsomorphicLayoutEffect_1 = require(\\\"./useIsomorphicLayoutEffect\\\");\\nfunction useDragSourceMonitor() {\\n    var manager = useDragDropManager_1.useDragDropManager();\\n    var monitor = react_1.useMemo(function () { return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager); }, [manager]);\\n    var connector = react_1.useMemo(function () { return new SourceConnector_1.SourceConnector(manager.getBackend()); }, [\\n        manager,\\n    ]);\\n    return [monitor, connector];\\n}\\nexports.useDragSourceMonitor = useDragSourceMonitor;\\nfunction useDragHandler(spec, monitor, connector) {\\n    var manager = useDragDropManager_1.useDragDropManager();\\n    var handler = react_1.useMemo(function () {\\n        return {\\n            beginDrag: function () {\\n                var _a = spec.current, begin = _a.begin, item = _a.item;\\n                if (begin) {\\n                    var beginResult = begin(monitor);\\n                    invariant_1.default(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\\n                    return beginResult || item || {};\\n                }\\n                return item || {};\\n            },\\n            canDrag: function () {\\n                if (typeof spec.current.canDrag === 'boolean') {\\n                    return spec.current.canDrag;\\n                }\\n                else if (typeof spec.current.canDrag === 'function') {\\n                    return spec.current.canDrag(monitor);\\n                }\\n                else {\\n                    return true;\\n                }\\n            },\\n            isDragging: function (globalMonitor, target) {\\n                var isDragging = spec.current.isDragging;\\n                return isDragging\\n                    ? isDragging(monitor)\\n                    : target === globalMonitor.getSourceId();\\n            },\\n            endDrag: function () {\\n                var end = spec.current.end;\\n                if (end) {\\n                    end(monitor.getItem(), monitor);\\n                }\\n                connector.reconnect();\\n            },\\n        };\\n    }, []);\\n    useIsomorphicLayoutEffect_1.useIsomorphicLayoutEffect(function registerHandler() {\\n        var _a = registration_1.registerSource(spec.current.item.type, handler, manager), handlerId = _a[0], unregister = _a[1];\\n        monitor.receiveHandlerId(handlerId);\\n        connector.receiveHandlerId(handlerId);\\n        return unregister;\\n    }, []);\\n}\\nexports.useDragHandler = useDragHandler;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__importDefault\",\"mod\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"react_1\",\"invariant_1\",\"registration_1\",\"useDragDropManager_1\",\"DragSourceMonitorImpl_1\",\"SourceConnector_1\",\"useIsomorphicLayoutEffect_1\",\"useDragSourceMonitor\",\"manager\",\"useDragDropManager\",\"monitor\",\"useMemo\",\"DragSourceMonitorImpl\",\"connector\",\"SourceConnector\",\"getBackend\",\"useDragHandler\",\"spec\",\"handler\",\"beginDrag\",\"_a\",\"current\",\"begin\",\"item\",\"beginResult\",\"default\",\"canDrag\",\"isDragging\",\"globalMonitor\",\"target\",\"getSourceId\",\"endDrag\",\"end\",\"getItem\",\"reconnect\",\"useIsomorphicLayoutEffect\",\"registerHandler\",\"registerSource\",\"type\",\"handlerId\",\"unregister\",\"receiveHandlerId\"]\n}\n"]