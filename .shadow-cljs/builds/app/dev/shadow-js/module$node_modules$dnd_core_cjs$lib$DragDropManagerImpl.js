["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/dnd-core-cjs/lib/DragDropManagerImpl.js"],"~:js","shadow$provide.module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl=function(global,require,module,exports){function makeStoreInstance(debugMode){var reduxDevTools=\"undefined\"!==typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__;return redux_1.createStore(reducers_1.default,debugMode&&reduxDevTools&&reduxDevTools({name:\"dnd-core\",instanceId:\"dnd-core\"}))}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};Object.defineProperty(exports,\"__esModule\",\n{value:!0});var redux_1=require(\"module$node_modules$redux$lib$redux\"),reducers_1=global(require(\"module$node_modules$dnd_core_cjs$lib$reducers$index\")),dragDrop_1=global(require(\"module$node_modules$dnd_core_cjs$lib$actions$dragDrop$index\")),DragDropMonitorImpl_1=global(require(\"module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl\")),HandlerRegistryImpl_1=global(require(\"module$node_modules$dnd_core_cjs$lib$HandlerRegistryImpl\"));require=function(){function DragDropManagerImpl(debugMode){var _this=\nthis;void 0===debugMode&&(debugMode=!1);this.isSetUp=!1;this.handleRefCountChange=function(){var shouldSetUp=0<_this.store.getState().refCount;_this.backend&&(shouldSetUp&&!_this.isSetUp?(_this.backend.setup(),_this.isSetUp=!0):!shouldSetUp&&_this.isSetUp&&(_this.backend.teardown(),_this.isSetUp=!1))};this.store=debugMode=makeStoreInstance(debugMode);this.monitor=new DragDropMonitorImpl_1.default(debugMode,new HandlerRegistryImpl_1.default(debugMode));debugMode.subscribe(this.handleRefCountChange)}\nDragDropManagerImpl.prototype.receiveBackend=function(backend){this.backend=backend};DragDropManagerImpl.prototype.getMonitor=function(){return this.monitor};DragDropManagerImpl.prototype.getBackend=function(){return this.backend};DragDropManagerImpl.prototype.getRegistry=function(){return this.monitor.registry};DragDropManagerImpl.prototype.getActions=function(){function bindActionCreator(actionCreator){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];args=actionCreator.apply(manager,\nargs);\"undefined\"!==typeof args&&dispatch(args)}}var manager=this,dispatch=this.store.dispatch,actions=dragDrop_1.default(this);return Object.keys(actions).reduce(function(boundActions,key){boundActions[key]=bindActionCreator(actions[key]);return boundActions},{})};DragDropManagerImpl.prototype.dispatch=function(action){this.store.dispatch(action)};return DragDropManagerImpl}();exports.default=require}","~:source","shadow$provide[\"module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar redux_1 = require(\"redux\");\nvar reducers_1 = __importDefault(require(\"./reducers\"));\nvar dragDrop_1 = __importDefault(require(\"./actions/dragDrop\"));\nvar DragDropMonitorImpl_1 = __importDefault(require(\"./DragDropMonitorImpl\"));\nvar HandlerRegistryImpl_1 = __importDefault(require(\"./HandlerRegistryImpl\"));\nfunction makeStoreInstance(debugMode) {\n    // TODO: if we ever make a react-native version of this,\n    // we'll need to consider how to pull off dev-tooling\n    var reduxDevTools = typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION__;\n    return redux_1.createStore(reducers_1.default, debugMode &&\n        reduxDevTools &&\n        reduxDevTools({\n            name: 'dnd-core',\n            instanceId: 'dnd-core',\n        }));\n}\nvar DragDropManagerImpl = /** @class */ (function () {\n    function DragDropManagerImpl(debugMode) {\n        var _this = this;\n        if (debugMode === void 0) { debugMode = false; }\n        this.isSetUp = false;\n        this.handleRefCountChange = function () {\n            var shouldSetUp = _this.store.getState().refCount > 0;\n            if (_this.backend) {\n                if (shouldSetUp && !_this.isSetUp) {\n                    _this.backend.setup();\n                    _this.isSetUp = true;\n                }\n                else if (!shouldSetUp && _this.isSetUp) {\n                    _this.backend.teardown();\n                    _this.isSetUp = false;\n                }\n            }\n        };\n        var store = makeStoreInstance(debugMode);\n        this.store = store;\n        this.monitor = new DragDropMonitorImpl_1.default(store, new HandlerRegistryImpl_1.default(store));\n        store.subscribe(this.handleRefCountChange);\n    }\n    DragDropManagerImpl.prototype.receiveBackend = function (backend) {\n        this.backend = backend;\n    };\n    DragDropManagerImpl.prototype.getMonitor = function () {\n        return this.monitor;\n    };\n    DragDropManagerImpl.prototype.getBackend = function () {\n        return this.backend;\n    };\n    DragDropManagerImpl.prototype.getRegistry = function () {\n        return this.monitor.registry;\n    };\n    DragDropManagerImpl.prototype.getActions = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-this-alias */\n        var manager = this;\n        var dispatch = this.store.dispatch;\n        function bindActionCreator(actionCreator) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var action = actionCreator.apply(manager, args);\n                if (typeof action !== 'undefined') {\n                    dispatch(action);\n                }\n            };\n        }\n        var actions = dragDrop_1.default(this);\n        return Object.keys(actions).reduce(function (boundActions, key) {\n            var action = actions[key];\n            boundActions[key] = bindActionCreator(action);\n            return boundActions;\n        }, {});\n    };\n    DragDropManagerImpl.prototype.dispatch = function (action) {\n        this.store.dispatch(action);\n    };\n    return DragDropManagerImpl;\n}());\nexports.default = DragDropManagerImpl;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$redux$lib$redux","~$module$node_modules$dnd_core_cjs$lib$HandlerRegistryImpl","~$module$node_modules$dnd_core_cjs$lib$reducers$index","~$module$node_modules$dnd_core_cjs$lib$actions$dragDrop$index","~$shadow.js","~$module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl"]],"~:properties",["^5",["dispatch","handleRefCountChange","getMonitor","__esModule","getActions","name","backend","value","getRegistry","getBackend","receiveBackend","isSetUp","monitor","instanceId","default","store"]],"~:compiled-at",1589100101363,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/dnd-core-cjs/lib/DragDropManagerImpl.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar redux_1 = require(\\\"redux\\\");\\nvar reducers_1 = __importDefault(require(\\\"./reducers\\\"));\\nvar dragDrop_1 = __importDefault(require(\\\"./actions/dragDrop\\\"));\\nvar DragDropMonitorImpl_1 = __importDefault(require(\\\"./DragDropMonitorImpl\\\"));\\nvar HandlerRegistryImpl_1 = __importDefault(require(\\\"./HandlerRegistryImpl\\\"));\\nfunction makeStoreInstance(debugMode) {\\n    // TODO: if we ever make a react-native version of this,\\n    // we'll need to consider how to pull off dev-tooling\\n    var reduxDevTools = typeof window !== 'undefined' &&\\n        window.__REDUX_DEVTOOLS_EXTENSION__;\\n    return redux_1.createStore(reducers_1.default, debugMode &&\\n        reduxDevTools &&\\n        reduxDevTools({\\n            name: 'dnd-core',\\n            instanceId: 'dnd-core',\\n        }));\\n}\\nvar DragDropManagerImpl = /** @class */ (function () {\\n    function DragDropManagerImpl(debugMode) {\\n        var _this = this;\\n        if (debugMode === void 0) { debugMode = false; }\\n        this.isSetUp = false;\\n        this.handleRefCountChange = function () {\\n            var shouldSetUp = _this.store.getState().refCount > 0;\\n            if (_this.backend) {\\n                if (shouldSetUp && !_this.isSetUp) {\\n                    _this.backend.setup();\\n                    _this.isSetUp = true;\\n                }\\n                else if (!shouldSetUp && _this.isSetUp) {\\n                    _this.backend.teardown();\\n                    _this.isSetUp = false;\\n                }\\n            }\\n        };\\n        var store = makeStoreInstance(debugMode);\\n        this.store = store;\\n        this.monitor = new DragDropMonitorImpl_1.default(store, new HandlerRegistryImpl_1.default(store));\\n        store.subscribe(this.handleRefCountChange);\\n    }\\n    DragDropManagerImpl.prototype.receiveBackend = function (backend) {\\n        this.backend = backend;\\n    };\\n    DragDropManagerImpl.prototype.getMonitor = function () {\\n        return this.monitor;\\n    };\\n    DragDropManagerImpl.prototype.getBackend = function () {\\n        return this.backend;\\n    };\\n    DragDropManagerImpl.prototype.getRegistry = function () {\\n        return this.monitor.registry;\\n    };\\n    DragDropManagerImpl.prototype.getActions = function () {\\n        /* eslint-disable-next-line @typescript-eslint/no-this-alias */\\n        var manager = this;\\n        var dispatch = this.store.dispatch;\\n        function bindActionCreator(actionCreator) {\\n            return function () {\\n                var args = [];\\n                for (var _i = 0; _i < arguments.length; _i++) {\\n                    args[_i] = arguments[_i];\\n                }\\n                var action = actionCreator.apply(manager, args);\\n                if (typeof action !== 'undefined') {\\n                    dispatch(action);\\n                }\\n            };\\n        }\\n        var actions = dragDrop_1.default(this);\\n        return Object.keys(actions).reduce(function (boundActions, key) {\\n            var action = actions[key];\\n            boundActions[key] = bindActionCreator(action);\\n            return boundActions;\\n        }, {});\\n    };\\n    DragDropManagerImpl.prototype.dispatch = function (action) {\\n        this.store.dispatch(action);\\n    };\\n    return DragDropManagerImpl;\\n}());\\nexports.default = DragDropManagerImpl;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"makeStoreInstance\",\"debugMode\",\"reduxDevTools\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"redux_1\",\"createStore\",\"reducers_1\",\"default\",\"name\",\"instanceId\",\"__importDefault\",\"mod\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"dragDrop_1\",\"DragDropMonitorImpl_1\",\"HandlerRegistryImpl_1\",\"DragDropManagerImpl\",\"_this\",\"isSetUp\",\"handleRefCountChange\",\"this.handleRefCountChange\",\"shouldSetUp\",\"store\",\"getState\",\"refCount\",\"backend\",\"setup\",\"teardown\",\"monitor\",\"subscribe\",\"prototype\",\"receiveBackend\",\"DragDropManagerImpl.prototype.receiveBackend\",\"getMonitor\",\"DragDropManagerImpl.prototype.getMonitor\",\"getBackend\",\"DragDropManagerImpl.prototype.getBackend\",\"getRegistry\",\"DragDropManagerImpl.prototype.getRegistry\",\"registry\",\"getActions\",\"DragDropManagerImpl.prototype.getActions\",\"bindActionCreator\",\"actionCreator\",\"args\",\"_i\",\"arguments\",\"length\",\"action\",\"apply\",\"manager\",\"dispatch\",\"actions\",\"keys\",\"reduce\",\"boundActions\",\"key\",\"DragDropManagerImpl.prototype.dispatch\"]\n}\n"]