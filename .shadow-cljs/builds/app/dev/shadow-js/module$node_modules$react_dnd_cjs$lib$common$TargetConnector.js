["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dnd-cjs/lib/common/TargetConnector.js"],"~:js","shadow$provide.module$node_modules$react_dnd_cjs$lib$common$TargetConnector=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};Object.defineProperty(exports,\"__esModule\",{value:!0});var shallowequal_1=global(require(\"module$node_modules$shallowequal$index\")),wrapConnectorHooks_1=global(require(\"module$node_modules$react_dnd_cjs$lib$common$wrapConnectorHooks\")),isRef_1=require(\"module$node_modules$react_dnd_cjs$lib$utils$isRef\");\nrequire=function(){function TargetConnector(backend){var _this=this;this.hooks=wrapConnectorHooks_1.default({dropTarget:function(node,options){_this.clearDropTarget();_this.dropTargetOptions=options;isRef_1.isRef(node)?_this.dropTargetRef=node:_this.dropTargetNode=node;_this.reconnect()}});this.lastConnectedDropTargetOptions=this.lastConnectedDropTarget=this.lastConnectedHandlerId=this.dropTargetOptionsInternal=this.dropTargetRef=this.handlerId=null;this.backend=backend}Object.defineProperty(TargetConnector.prototype,\n\"connectTarget\",{get:function(){return this.dropTarget},enumerable:!0,configurable:!0});TargetConnector.prototype.reconnect=function(){var didChange=this.didHandlerIdChange()||this.didDropTargetChange()||this.didOptionsChange();didChange&&this.disconnectDropTarget();var dropTarget=this.dropTarget;this.handlerId&&(dropTarget?didChange&&(this.lastConnectedHandlerId=this.handlerId,this.lastConnectedDropTarget=dropTarget,this.lastConnectedDropTargetOptions=this.dropTargetOptions,this.unsubscribeDropTarget=\nthis.backend.connectDropTarget(this.handlerId,dropTarget,this.dropTargetOptions)):this.lastConnectedDropTarget=dropTarget)};TargetConnector.prototype.receiveHandlerId=function(newHandlerId){newHandlerId!==this.handlerId&&(this.handlerId=newHandlerId,this.reconnect())};Object.defineProperty(TargetConnector.prototype,\"dropTargetOptions\",{get:function(){return this.dropTargetOptionsInternal},set:function(options){this.dropTargetOptionsInternal=options},enumerable:!0,configurable:!0});TargetConnector.prototype.didHandlerIdChange=\nfunction(){return this.lastConnectedHandlerId!==this.handlerId};TargetConnector.prototype.didDropTargetChange=function(){return this.lastConnectedDropTarget!==this.dropTarget};TargetConnector.prototype.didOptionsChange=function(){return!shallowequal_1.default(this.lastConnectedDropTargetOptions,this.dropTargetOptions)};TargetConnector.prototype.disconnectDropTarget=function(){this.unsubscribeDropTarget&&(this.unsubscribeDropTarget(),this.unsubscribeDropTarget=void 0)};Object.defineProperty(TargetConnector.prototype,\n\"dropTarget\",{get:function(){return this.dropTargetNode||this.dropTargetRef&&this.dropTargetRef.current},enumerable:!0,configurable:!0});TargetConnector.prototype.clearDropTarget=function(){this.dropTargetNode=this.dropTargetRef=null};return TargetConnector}();exports.TargetConnector=require}","~:source","shadow$provide[\"module$node_modules$react_dnd_cjs$lib$common$TargetConnector\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shallowequal_1 = __importDefault(require(\"shallowequal\"));\nvar wrapConnectorHooks_1 = __importDefault(require(\"./wrapConnectorHooks\"));\nvar isRef_1 = require(\"../utils/isRef\");\nvar TargetConnector = /** @class */ (function () {\n    function TargetConnector(backend) {\n        var _this = this;\n        this.hooks = wrapConnectorHooks_1.default({\n            dropTarget: function (node, options) {\n                _this.clearDropTarget();\n                _this.dropTargetOptions = options;\n                if (isRef_1.isRef(node)) {\n                    _this.dropTargetRef = node;\n                }\n                else {\n                    _this.dropTargetNode = node;\n                }\n                _this.reconnect();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n        this.backend = backend;\n    }\n    Object.defineProperty(TargetConnector.prototype, \"connectTarget\", {\n        get: function () {\n            return this.dropTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.reconnect = function () {\n        // if nothing has changed then don't resubscribe\n        var didChange = this.didHandlerIdChange() ||\n            this.didDropTargetChange() ||\n            this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        var dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    };\n    TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTargetOptions\", {\n        get: function () {\n            return this.dropTargetOptionsInternal;\n        },\n        set: function (options) {\n            this.dropTargetOptionsInternal = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.didHandlerIdChange = function () {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    };\n    TargetConnector.prototype.didDropTargetChange = function () {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    };\n    TargetConnector.prototype.didOptionsChange = function () {\n        return !shallowequal_1.default(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    };\n    TargetConnector.prototype.disconnectDropTarget = function () {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTarget\", {\n        get: function () {\n            return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.clearDropTarget = function () {\n        this.dropTargetRef = null;\n        this.dropTargetNode = null;\n    };\n    return TargetConnector;\n}());\nexports.TargetConnector = TargetConnector;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dnd_cjs$lib$utils$isRef","~$module$node_modules$shallowequal$index","~$shadow.js","~$module$node_modules$react_dnd_cjs$lib$common$wrapConnectorHooks"]],"~:properties",["^5",["reconnect","lastConnectedDropTargetOptions","didDropTargetChange","lastConnectedDropTarget","lastConnectedHandlerId","TargetConnector","__esModule","disconnectDropTarget","dropTargetNode","unsubscribeDropTarget","dropTarget","configurable","backend","value","enumerable","receiveHandlerId","dropTargetOptionsInternal","dropTargetOptions","handlerId","didOptionsChange","connectTarget","set","dropTargetRef","didHandlerIdChange","get","hooks","clearDropTarget"]],"~:compiled-at",1589100101386,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dnd_cjs$lib$common$TargetConnector.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-dnd-cjs/lib/common/TargetConnector.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dnd_cjs$lib$common$TargetConnector\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar shallowequal_1 = __importDefault(require(\\\"shallowequal\\\"));\\nvar wrapConnectorHooks_1 = __importDefault(require(\\\"./wrapConnectorHooks\\\"));\\nvar isRef_1 = require(\\\"../utils/isRef\\\");\\nvar TargetConnector = /** @class */ (function () {\\n    function TargetConnector(backend) {\\n        var _this = this;\\n        this.hooks = wrapConnectorHooks_1.default({\\n            dropTarget: function (node, options) {\\n                _this.clearDropTarget();\\n                _this.dropTargetOptions = options;\\n                if (isRef_1.isRef(node)) {\\n                    _this.dropTargetRef = node;\\n                }\\n                else {\\n                    _this.dropTargetNode = node;\\n                }\\n                _this.reconnect();\\n            },\\n        });\\n        this.handlerId = null;\\n        // The drop target may either be attached via ref or connect function\\n        this.dropTargetRef = null;\\n        this.dropTargetOptionsInternal = null;\\n        this.lastConnectedHandlerId = null;\\n        this.lastConnectedDropTarget = null;\\n        this.lastConnectedDropTargetOptions = null;\\n        this.backend = backend;\\n    }\\n    Object.defineProperty(TargetConnector.prototype, \\\"connectTarget\\\", {\\n        get: function () {\\n            return this.dropTarget;\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    TargetConnector.prototype.reconnect = function () {\\n        // if nothing has changed then don't resubscribe\\n        var didChange = this.didHandlerIdChange() ||\\n            this.didDropTargetChange() ||\\n            this.didOptionsChange();\\n        if (didChange) {\\n            this.disconnectDropTarget();\\n        }\\n        var dropTarget = this.dropTarget;\\n        if (!this.handlerId) {\\n            return;\\n        }\\n        if (!dropTarget) {\\n            this.lastConnectedDropTarget = dropTarget;\\n            return;\\n        }\\n        if (didChange) {\\n            this.lastConnectedHandlerId = this.handlerId;\\n            this.lastConnectedDropTarget = dropTarget;\\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\\n        }\\n    };\\n    TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\\n        if (newHandlerId === this.handlerId) {\\n            return;\\n        }\\n        this.handlerId = newHandlerId;\\n        this.reconnect();\\n    };\\n    Object.defineProperty(TargetConnector.prototype, \\\"dropTargetOptions\\\", {\\n        get: function () {\\n            return this.dropTargetOptionsInternal;\\n        },\\n        set: function (options) {\\n            this.dropTargetOptionsInternal = options;\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    TargetConnector.prototype.didHandlerIdChange = function () {\\n        return this.lastConnectedHandlerId !== this.handlerId;\\n    };\\n    TargetConnector.prototype.didDropTargetChange = function () {\\n        return this.lastConnectedDropTarget !== this.dropTarget;\\n    };\\n    TargetConnector.prototype.didOptionsChange = function () {\\n        return !shallowequal_1.default(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\\n    };\\n    TargetConnector.prototype.disconnectDropTarget = function () {\\n        if (this.unsubscribeDropTarget) {\\n            this.unsubscribeDropTarget();\\n            this.unsubscribeDropTarget = undefined;\\n        }\\n    };\\n    Object.defineProperty(TargetConnector.prototype, \\\"dropTarget\\\", {\\n        get: function () {\\n            return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    TargetConnector.prototype.clearDropTarget = function () {\\n        this.dropTargetRef = null;\\n        this.dropTargetNode = null;\\n    };\\n    return TargetConnector;\\n}());\\nexports.TargetConnector = TargetConnector;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__importDefault\",\"mod\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"shallowequal_1\",\"wrapConnectorHooks_1\",\"isRef_1\",\"TargetConnector\",\"backend\",\"_this\",\"hooks\",\"default\",\"dropTarget\",\"node\",\"options\",\"clearDropTarget\",\"dropTargetOptions\",\"isRef\",\"dropTargetRef\",\"dropTargetNode\",\"reconnect\",\"lastConnectedDropTargetOptions\",\"lastConnectedDropTarget\",\"lastConnectedHandlerId\",\"dropTargetOptionsInternal\",\"handlerId\",\"prototype\",\"get\",\"enumerable\",\"configurable\",\"TargetConnector.prototype.reconnect\",\"didChange\",\"didHandlerIdChange\",\"didDropTargetChange\",\"didOptionsChange\",\"disconnectDropTarget\",\"unsubscribeDropTarget\",\"connectDropTarget\",\"receiveHandlerId\",\"TargetConnector.prototype.receiveHandlerId\",\"newHandlerId\",\"set\",\"TargetConnector.prototype.didHandlerIdChange\",\"TargetConnector.prototype.didDropTargetChange\",\"TargetConnector.prototype.didOptionsChange\",\"TargetConnector.prototype.disconnectDropTarget\",\"undefined\",\"current\",\"TargetConnector.prototype.clearDropTarget\"]\n}\n"]