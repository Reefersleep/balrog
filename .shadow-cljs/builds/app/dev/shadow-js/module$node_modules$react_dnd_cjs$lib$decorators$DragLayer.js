["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dnd-cjs/lib/decorators/DragLayer.js"],"~:js","shadow$provide.module$node_modules$react_dnd_cjs$lib$decorators$DragLayer=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=\nnull===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),__assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);result[\"default\"]=\nmod;return result};module=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};Object.defineProperty(exports,\"__esModule\",{value:!0});var React=global(require(\"module$node_modules$react$index\")),shallowequal_1=module(require(\"module$node_modules$shallowequal$index\")),hoist_non_react_statics_1=module(require(\"module$node_modules$hoist_non_react_statics$dist$hoist_non_react_statics_cjs\")),invariant_1=module(require(\"module$node_modules$invariant$browser\")),index_1=\nrequire(\"module$node_modules$react_dnd_cjs$lib$index\"),js_utils_1=require(\"module$node_modules$react_dnd_cjs$lib$utils$js_utils\"),utils_1=require(\"module$node_modules$react_dnd_cjs$lib$decorators$utils\");exports.DragLayer=function(collect,options){void 0===options&&(options={});utils_1.checkDecoratorArguments(\"DragLayer\",\"collect[, options]\",collect,options);invariant_1.default(\"function\"===typeof collect,'Expected \"collect\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ',\n\"Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer\",collect);invariant_1.default(js_utils_1.isPlainObject(options),'Expected \"options\" provided as the second argument to DragLayer to be a plain object when specified. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer',options);return function(DecoratedComponent){var _a$jscomp$0=options.arePropsEqual,arePropsEqual=void 0===_a$jscomp$0?shallowequal_1.default:_a$jscomp$0,\ndisplayName=DecoratedComponent.displayName||DecoratedComponent.name||\"Component\";_a$jscomp$0=function(_super){function DragLayerContainer(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this.isCurrentlyMounted=!1;_this.ref=React.createRef();_this.handleChange=function(){if(_this.isCurrentlyMounted){var nextState=_this.getCurrentState();shallowequal_1.default(nextState,_this.state)||_this.setState(nextState)}};return _this}__extends(DragLayerContainer,_super);DragLayerContainer.prototype.getDecoratedComponentInstance=\nfunction(){invariant_1.default(this.ref.current,\"In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()\");return this.ref.current};DragLayerContainer.prototype.shouldComponentUpdate=function(nextProps,nextState){return!arePropsEqual(nextProps,this.props)||!shallowequal_1.default(nextState,this.state)};DragLayerContainer.prototype.componentDidMount=function(){this.isCurrentlyMounted=!0;this.handleChange()};DragLayerContainer.prototype.componentWillUnmount=\nfunction(){this.isCurrentlyMounted=!1;this.unsubscribeFromOffsetChange&&(this.unsubscribeFromOffsetChange(),this.unsubscribeFromOffsetChange=void 0);this.unsubscribeFromStateChange&&(this.unsubscribeFromStateChange(),this.unsubscribeFromStateChange=void 0)};DragLayerContainer.prototype.render=function(){var _this=this;return React.createElement(index_1.DndContext.Consumer,null,function(_a){_a=_a.dragDropManager;if(void 0===_a)return null;_this.receiveDragDropManager(_a);return _this.isCurrentlyMounted?\nReact.createElement(DecoratedComponent,__assign({},_this.props,_this.state,{ref:utils_1.isRefable(DecoratedComponent)?_this.ref:null})):null})};DragLayerContainer.prototype.receiveDragDropManager=function(dragDropManager){void 0===this.manager&&(this.manager=dragDropManager,invariant_1.default(\"object\"===typeof dragDropManager,\"Could not find the drag and drop manager in the context of %s. Make sure to render a DndProvider component in your top-level component. Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context\",\ndisplayName,displayName),dragDropManager=this.manager.getMonitor(),this.unsubscribeFromOffsetChange=dragDropManager.subscribeToOffsetChange(this.handleChange),this.unsubscribeFromStateChange=dragDropManager.subscribeToStateChange(this.handleChange))};DragLayerContainer.prototype.getCurrentState=function(){if(!this.manager)return{};var monitor=this.manager.getMonitor();return collect(monitor,this.props)};DragLayerContainer.displayName=\"DragLayer(\"+displayName+\")\";DragLayerContainer.DecoratedComponent=\nDecoratedComponent;return DragLayerContainer}(React.Component);return hoist_non_react_statics_1.default(_a$jscomp$0,DecoratedComponent)}}}","~:source","shadow$provide[\"module$node_modules$react_dnd_cjs$lib$decorators$DragLayer\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar shallowequal_1 = __importDefault(require(\"shallowequal\"));\nvar hoist_non_react_statics_1 = __importDefault(require(\"hoist-non-react-statics\"));\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar index_1 = require(\"../index\");\nvar js_utils_1 = require(\"../utils/js_utils\");\nvar utils_1 = require(\"./utils\");\nfunction DragLayer(collect, options) {\n    if (options === void 0) { options = {}; }\n    utils_1.checkDecoratorArguments('DragLayer', 'collect[, options]', collect, options);\n    invariant_1.default(typeof collect === 'function', 'Expected \"collect\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ', 'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', collect);\n    invariant_1.default(js_utils_1.isPlainObject(options), 'Expected \"options\" provided as the second argument to DragLayer to be a plain object when specified. ' +\n        'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', options);\n    return function decorateLayer(DecoratedComponent) {\n        var Decorated = DecoratedComponent;\n        var _a = options.arePropsEqual, arePropsEqual = _a === void 0 ? shallowequal_1.default : _a;\n        var displayName = Decorated.displayName || Decorated.name || 'Component';\n        var DragLayerContainer = /** @class */ (function (_super) {\n            __extends(DragLayerContainer, _super);\n            function DragLayerContainer() {\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.isCurrentlyMounted = false;\n                _this.ref = React.createRef();\n                _this.handleChange = function () {\n                    if (!_this.isCurrentlyMounted) {\n                        return;\n                    }\n                    var nextState = _this.getCurrentState();\n                    if (!shallowequal_1.default(nextState, _this.state)) {\n                        _this.setState(nextState);\n                    }\n                };\n                return _this;\n            }\n            DragLayerContainer.prototype.getDecoratedComponentInstance = function () {\n                invariant_1.default(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n                return this.ref.current;\n            };\n            DragLayerContainer.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n                return (!arePropsEqual(nextProps, this.props) ||\n                    !shallowequal_1.default(nextState, this.state));\n            };\n            DragLayerContainer.prototype.componentDidMount = function () {\n                this.isCurrentlyMounted = true;\n                this.handleChange();\n            };\n            DragLayerContainer.prototype.componentWillUnmount = function () {\n                this.isCurrentlyMounted = false;\n                if (this.unsubscribeFromOffsetChange) {\n                    this.unsubscribeFromOffsetChange();\n                    this.unsubscribeFromOffsetChange = undefined;\n                }\n                if (this.unsubscribeFromStateChange) {\n                    this.unsubscribeFromStateChange();\n                    this.unsubscribeFromStateChange = undefined;\n                }\n            };\n            DragLayerContainer.prototype.render = function () {\n                var _this = this;\n                return (React.createElement(index_1.DndContext.Consumer, null, function (_a) {\n                    var dragDropManager = _a.dragDropManager;\n                    if (dragDropManager === undefined) {\n                        return null;\n                    }\n                    _this.receiveDragDropManager(dragDropManager);\n                    // Let componentDidMount fire to initialize the collected state\n                    if (!_this.isCurrentlyMounted) {\n                        return null;\n                    }\n                    return (React.createElement(Decorated, __assign({}, _this.props, _this.state, { ref: utils_1.isRefable(Decorated) ? _this.ref : null })));\n                }));\n            };\n            DragLayerContainer.prototype.receiveDragDropManager = function (dragDropManager) {\n                if (this.manager !== undefined) {\n                    return;\n                }\n                this.manager = dragDropManager;\n                invariant_1.default(typeof dragDropManager === 'object', 'Could not find the drag and drop manager in the context of %s. ' +\n                    'Make sure to render a DndProvider component in your top-level component. ' +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n                var monitor = this.manager.getMonitor();\n                this.unsubscribeFromOffsetChange = monitor.subscribeToOffsetChange(this.handleChange);\n                this.unsubscribeFromStateChange = monitor.subscribeToStateChange(this.handleChange);\n            };\n            DragLayerContainer.prototype.getCurrentState = function () {\n                if (!this.manager) {\n                    return {};\n                }\n                var monitor = this.manager.getMonitor();\n                return collect(monitor, this.props);\n            };\n            DragLayerContainer.displayName = \"DragLayer(\" + displayName + \")\";\n            DragLayerContainer.DecoratedComponent = DecoratedComponent;\n            return DragLayerContainer;\n        }(React.Component));\n        return hoist_non_react_statics_1.default(DragLayerContainer, DecoratedComponent);\n    };\n}\nexports.DragLayer = DragLayer;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dnd_cjs$lib$utils$js_utils","~$module$node_modules$invariant$browser","~$module$node_modules$shallowequal$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$react_dnd_cjs$lib$decorators$utils","~$module$node_modules$react_dnd_cjs$lib$index","~$module$node_modules$hoist_non_react_statics$dist$hoist_non_react_statics_cjs"]],"~:properties",["^5",["DragLayer","getDecoratedComponentInstance","handleChange","unsubscribeFromStateChange","prototype","displayName","__esModule","DecoratedComponent","isCurrentlyMounted","value","componentDidMount","shouldComponentUpdate","render","unsubscribeFromOffsetChange","ref","__proto__","receiveDragDropManager","manager","componentWillUnmount","getCurrentState","constructor"]],"~:compiled-at",1589100101406,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dnd_cjs$lib$decorators$DragLayer.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-dnd-cjs/lib/decorators/DragLayer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dnd_cjs$lib$decorators$DragLayer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nvar __assign = (this && this.__assign) || function () {\\n    __assign = Object.assign || function(t) {\\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\\n            s = arguments[i];\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\n                t[p] = s[p];\\n        }\\n        return t;\\n    };\\n    return __assign.apply(this, arguments);\\n};\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\n    result[\\\"default\\\"] = mod;\\n    return result;\\n};\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar React = __importStar(require(\\\"react\\\"));\\nvar shallowequal_1 = __importDefault(require(\\\"shallowequal\\\"));\\nvar hoist_non_react_statics_1 = __importDefault(require(\\\"hoist-non-react-statics\\\"));\\nvar invariant_1 = __importDefault(require(\\\"invariant\\\"));\\nvar index_1 = require(\\\"../index\\\");\\nvar js_utils_1 = require(\\\"../utils/js_utils\\\");\\nvar utils_1 = require(\\\"./utils\\\");\\nfunction DragLayer(collect, options) {\\n    if (options === void 0) { options = {}; }\\n    utils_1.checkDecoratorArguments('DragLayer', 'collect[, options]', collect, options);\\n    invariant_1.default(typeof collect === 'function', 'Expected \\\"collect\\\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ', 'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', collect);\\n    invariant_1.default(js_utils_1.isPlainObject(options), 'Expected \\\"options\\\" provided as the second argument to DragLayer to be a plain object when specified. ' +\\n        'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', options);\\n    return function decorateLayer(DecoratedComponent) {\\n        var Decorated = DecoratedComponent;\\n        var _a = options.arePropsEqual, arePropsEqual = _a === void 0 ? shallowequal_1.default : _a;\\n        var displayName = Decorated.displayName || Decorated.name || 'Component';\\n        var DragLayerContainer = /** @class */ (function (_super) {\\n            __extends(DragLayerContainer, _super);\\n            function DragLayerContainer() {\\n                var _this = _super !== null && _super.apply(this, arguments) || this;\\n                _this.isCurrentlyMounted = false;\\n                _this.ref = React.createRef();\\n                _this.handleChange = function () {\\n                    if (!_this.isCurrentlyMounted) {\\n                        return;\\n                    }\\n                    var nextState = _this.getCurrentState();\\n                    if (!shallowequal_1.default(nextState, _this.state)) {\\n                        _this.setState(nextState);\\n                    }\\n                };\\n                return _this;\\n            }\\n            DragLayerContainer.prototype.getDecoratedComponentInstance = function () {\\n                invariant_1.default(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\\n                return this.ref.current;\\n            };\\n            DragLayerContainer.prototype.shouldComponentUpdate = function (nextProps, nextState) {\\n                return (!arePropsEqual(nextProps, this.props) ||\\n                    !shallowequal_1.default(nextState, this.state));\\n            };\\n            DragLayerContainer.prototype.componentDidMount = function () {\\n                this.isCurrentlyMounted = true;\\n                this.handleChange();\\n            };\\n            DragLayerContainer.prototype.componentWillUnmount = function () {\\n                this.isCurrentlyMounted = false;\\n                if (this.unsubscribeFromOffsetChange) {\\n                    this.unsubscribeFromOffsetChange();\\n                    this.unsubscribeFromOffsetChange = undefined;\\n                }\\n                if (this.unsubscribeFromStateChange) {\\n                    this.unsubscribeFromStateChange();\\n                    this.unsubscribeFromStateChange = undefined;\\n                }\\n            };\\n            DragLayerContainer.prototype.render = function () {\\n                var _this = this;\\n                return (React.createElement(index_1.DndContext.Consumer, null, function (_a) {\\n                    var dragDropManager = _a.dragDropManager;\\n                    if (dragDropManager === undefined) {\\n                        return null;\\n                    }\\n                    _this.receiveDragDropManager(dragDropManager);\\n                    // Let componentDidMount fire to initialize the collected state\\n                    if (!_this.isCurrentlyMounted) {\\n                        return null;\\n                    }\\n                    return (React.createElement(Decorated, __assign({}, _this.props, _this.state, { ref: utils_1.isRefable(Decorated) ? _this.ref : null })));\\n                }));\\n            };\\n            DragLayerContainer.prototype.receiveDragDropManager = function (dragDropManager) {\\n                if (this.manager !== undefined) {\\n                    return;\\n                }\\n                this.manager = dragDropManager;\\n                invariant_1.default(typeof dragDropManager === 'object', 'Could not find the drag and drop manager in the context of %s. ' +\\n                    'Make sure to render a DndProvider component in your top-level component. ' +\\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\\n                var monitor = this.manager.getMonitor();\\n                this.unsubscribeFromOffsetChange = monitor.subscribeToOffsetChange(this.handleChange);\\n                this.unsubscribeFromStateChange = monitor.subscribeToStateChange(this.handleChange);\\n            };\\n            DragLayerContainer.prototype.getCurrentState = function () {\\n                if (!this.manager) {\\n                    return {};\\n                }\\n                var monitor = this.manager.getMonitor();\\n                return collect(monitor, this.props);\\n            };\\n            DragLayerContainer.displayName = \\\"DragLayer(\\\" + displayName + \\\")\\\";\\n            DragLayerContainer.DecoratedComponent = DecoratedComponent;\\n            return DragLayerContainer;\\n        }(React.Component));\\n        return hoist_non_react_statics_1.default(DragLayerContainer, DecoratedComponent);\\n    };\\n}\\nexports.DragLayer = DragLayer;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"hasOwnProperty\",\"__\",\"constructor\",\"prototype\",\"create\",\"__assign\",\"assign\",\"t\",\"s\",\"i\",\"n\",\"arguments\",\"length\",\"call\",\"apply\",\"__importStar\",\"mod\",\"__esModule\",\"result\",\"k\",\"__importDefault\",\"defineProperty\",\"value\",\"React\",\"shallowequal_1\",\"hoist_non_react_statics_1\",\"invariant_1\",\"index_1\",\"js_utils_1\",\"utils_1\",\"DragLayer\",\"collect\",\"options\",\"checkDecoratorArguments\",\"default\",\"isPlainObject\",\"decorateLayer\",\"DecoratedComponent\",\"_a\",\"arePropsEqual\",\"displayName\",\"name\",\"DragLayerContainer\",\"_super\",\"_this\",\"isCurrentlyMounted\",\"ref\",\"createRef\",\"handleChange\",\"_this.handleChange\",\"nextState\",\"getCurrentState\",\"state\",\"setState\",\"getDecoratedComponentInstance\",\"DragLayerContainer.prototype.getDecoratedComponentInstance\",\"current\",\"shouldComponentUpdate\",\"DragLayerContainer.prototype.shouldComponentUpdate\",\"nextProps\",\"props\",\"componentDidMount\",\"DragLayerContainer.prototype.componentDidMount\",\"componentWillUnmount\",\"DragLayerContainer.prototype.componentWillUnmount\",\"unsubscribeFromOffsetChange\",\"undefined\",\"unsubscribeFromStateChange\",\"render\",\"DragLayerContainer.prototype.render\",\"createElement\",\"DndContext\",\"Consumer\",\"dragDropManager\",\"receiveDragDropManager\",\"isRefable\",\"DragLayerContainer.prototype.receiveDragDropManager\",\"manager\",\"monitor\",\"getMonitor\",\"subscribeToOffsetChange\",\"subscribeToStateChange\",\"DragLayerContainer.prototype.getCurrentState\",\"Component\"]\n}\n"]