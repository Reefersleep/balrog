["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/dnd-core-cjs/lib/utils/equality.js"],"~:js","shadow$provide.module$node_modules$dnd_core_cjs$lib$utils$equality=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.strictEquality=function(a,b){return a===b};exports.areCoordsEqual=function(offsetA,offsetB){return offsetA||offsetB?offsetA&&offsetB?offsetA.x===offsetB.x&&offsetA.y===offsetB.y:!1:!0};exports.areArraysEqual=function(a,b,isEqual){void 0===isEqual&&(isEqual=exports.strictEquality);if(a.length!==b.length)return!1;for(var i=0;i<a.length;++i)if(!isEqual(a[i],\nb[i]))return!1;return!0}}","~:source","shadow$provide[\"module$node_modules$dnd_core_cjs$lib$utils$equality\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictEquality = function (a, b) { return a === b; };\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nfunction areCoordsEqual(offsetA, offsetB) {\n    if (!offsetA && !offsetB) {\n        return true;\n    }\n    else if (!offsetA || !offsetB) {\n        return false;\n    }\n    else {\n        return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n    }\n}\nexports.areCoordsEqual = areCoordsEqual;\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nfunction areArraysEqual(a, b, isEqual) {\n    if (isEqual === void 0) { isEqual = exports.strictEquality; }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (var i = 0; i < a.length; ++i) {\n        if (!isEqual(a[i], b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.areArraysEqual = areArraysEqual;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["areArraysEqual","__esModule","value","strictEquality","areCoordsEqual"]],"~:compiled-at",1589100101341,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$dnd_core_cjs$lib$utils$equality.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEhHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,eAAA,CAAyBC,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAOD,EAAP,GAAaC,CAAf,CAiBzCP,QAAAQ,eAAA,CAXAA,QAAuB,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACtC,MAAKD,QAAL,EAAiBC,OAAjB,CAGUD,OAAL,EAAiBC,OAAjB,CAIMD,OAAAE,EAJN,GAIoBD,OAAAC,EAJpB,EAIiCF,OAAAG,EAJjC,GAI+CF,OAAAE,EAJ/C,CACM,CAAA,CAJX,CACW,CAAA,CAF2B,CA6B1CZ,QAAAa,eAAA,CAZAA,QAAuB,CAACP,CAAD,CAAIC,CAAJ,CAAOO,OAAP,CAAgB,CACnB,IAAK,EAArB,GAAIA,OAAJ,GAA0BA,OAA1B,CAAoCd,OAAAI,eAApC,CACA,IAAIE,CAAAS,OAAJ,GAAiBR,CAAAQ,OAAjB,CACI,MAAO,CAAA,CAEX,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBV,CAAAS,OAApB,CAA8B,EAAEC,CAAhC,CACI,GAAI,CAACF,OAAA,CAAQR,CAAA,CAAEU,CAAF,CAAR;AAAcT,CAAA,CAAES,CAAF,CAAd,CAAL,CACI,MAAO,CAAA,CAGf,OAAO,CAAA,CAV4B,CA1ByE;\",\n\"sources\":[\"node_modules/dnd-core-cjs/lib/utils/equality.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$dnd_core_cjs$lib$utils$equality\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.strictEquality = function (a, b) { return a === b; };\\n/**\\n * Determine if two cartesian coordinate offsets are equal\\n * @param offsetA\\n * @param offsetB\\n */\\nfunction areCoordsEqual(offsetA, offsetB) {\\n    if (!offsetA && !offsetB) {\\n        return true;\\n    }\\n    else if (!offsetA || !offsetB) {\\n        return false;\\n    }\\n    else {\\n        return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\\n    }\\n}\\nexports.areCoordsEqual = areCoordsEqual;\\n/**\\n * Determines if two arrays of items are equal\\n * @param a The first array of items\\n * @param b The second array of items\\n */\\nfunction areArraysEqual(a, b, isEqual) {\\n    if (isEqual === void 0) { isEqual = exports.strictEquality; }\\n    if (a.length !== b.length) {\\n        return false;\\n    }\\n    for (var i = 0; i < a.length; ++i) {\\n        if (!isEqual(a[i], b[i])) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\nexports.areArraysEqual = areArraysEqual;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"strictEquality\",\"exports.strictEquality\",\"a\",\"b\",\"areCoordsEqual\",\"offsetA\",\"offsetB\",\"x\",\"y\",\"areArraysEqual\",\"isEqual\",\"length\",\"i\"]\n}\n"]