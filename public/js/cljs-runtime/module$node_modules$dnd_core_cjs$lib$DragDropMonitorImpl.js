shadow$provide.module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=global(require("module$node_modules$invariant$browser")),matchesType_1=global(require("module$node_modules$dnd_core_cjs$lib$utils$matchesType")),coords_1=require("module$node_modules$dnd_core_cjs$lib$utils$coords"),dirtiness_1=
require("module$node_modules$dnd_core_cjs$lib$utils$dirtiness");require=function(){function DragDropMonitorImpl(store,registry){this.store=store;this.registry=registry}DragDropMonitorImpl.prototype.subscribeToStateChange=function(listener,options){var _this=this;void 0===options&&(options={handlerIds:void 0});var handlerIds=options.handlerIds;invariant_1.default("function"===typeof listener,"listener must be a function.");invariant_1.default("undefined"===typeof handlerIds||Array.isArray(handlerIds),
"handlerIds, when specified, must be an array of strings.");var prevStateId=this.store.getState().stateId;return this.store.subscribe(function(){var state=_this.store.getState(),currentStateId=state.stateId;try{currentStateId===prevStateId||currentStateId===prevStateId+1&&!dirtiness_1.areDirty(state.dirtyHandlerIds,handlerIds)||listener()}finally{prevStateId=currentStateId}})};DragDropMonitorImpl.prototype.subscribeToOffsetChange=function(listener){var _this=this;invariant_1.default("function"===
typeof listener,"listener must be a function.");var previousState=this.store.getState().dragOffset;return this.store.subscribe(function(){var nextState=_this.store.getState().dragOffset;nextState!==previousState&&(previousState=nextState,listener())})};DragDropMonitorImpl.prototype.canDragSource=function(sourceId){if(!sourceId)return!1;var source=this.registry.getSource(sourceId);invariant_1.default(source,"Expected to find a valid source.");return this.isDragging()?!1:source.canDrag(this,sourceId)};
DragDropMonitorImpl.prototype.canDropOnTarget=function(targetId){if(!targetId)return!1;var target=this.registry.getTarget(targetId);invariant_1.default(target,"Expected to find a valid target.");if(!this.isDragging()||this.didDrop())return!1;var targetType=this.registry.getTargetType(targetId),draggedItemType=this.getItemType();return matchesType_1.default(targetType,draggedItemType)&&target.canDrop(this,targetId)};DragDropMonitorImpl.prototype.isDragging=function(){return!!this.getItemType()};DragDropMonitorImpl.prototype.isDraggingSource=
function(sourceId){if(!sourceId)return!1;var source=this.registry.getSource(sourceId,!0);invariant_1.default(source,"Expected to find a valid source.");if(!this.isDragging()||!this.isSourcePublic())return!1;var sourceType=this.registry.getSourceType(sourceId),draggedItemType=this.getItemType();return sourceType!==draggedItemType?!1:source.isDragging(this,sourceId)};DragDropMonitorImpl.prototype.isOverTarget=function(targetId,options){void 0===options&&(options={shallow:!1});if(!targetId)return!1;
options=options.shallow;if(!this.isDragging())return!1;var targetType=this.registry.getTargetType(targetId),draggedItemType=this.getItemType();if(draggedItemType&&!matchesType_1.default(targetType,draggedItemType))return!1;targetType=this.getTargetIds();if(!targetType.length)return!1;targetId=targetType.indexOf(targetId);return options?targetId===targetType.length-1:-1<targetId};DragDropMonitorImpl.prototype.getItemType=function(){return this.store.getState().dragOperation.itemType};DragDropMonitorImpl.prototype.getItem=
function(){return this.store.getState().dragOperation.item};DragDropMonitorImpl.prototype.getSourceId=function(){return this.store.getState().dragOperation.sourceId};DragDropMonitorImpl.prototype.getTargetIds=function(){return this.store.getState().dragOperation.targetIds};DragDropMonitorImpl.prototype.getDropResult=function(){return this.store.getState().dragOperation.dropResult};DragDropMonitorImpl.prototype.didDrop=function(){return this.store.getState().dragOperation.didDrop};DragDropMonitorImpl.prototype.isSourcePublic=
function(){return this.store.getState().dragOperation.isSourcePublic};DragDropMonitorImpl.prototype.getInitialClientOffset=function(){return this.store.getState().dragOffset.initialClientOffset};DragDropMonitorImpl.prototype.getInitialSourceClientOffset=function(){return this.store.getState().dragOffset.initialSourceClientOffset};DragDropMonitorImpl.prototype.getClientOffset=function(){return this.store.getState().dragOffset.clientOffset};DragDropMonitorImpl.prototype.getSourceClientOffset=function(){return coords_1.getSourceClientOffset(this.store.getState().dragOffset)};
DragDropMonitorImpl.prototype.getDifferenceFromInitialOffset=function(){return coords_1.getDifferenceFromInitialOffset(this.store.getState().dragOffset)};return DragDropMonitorImpl}();exports.default=require}
//# sourceMappingURL=module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl.js.map
