shadow$provide.module$node_modules$react_dnd_cjs$lib$hooks$internal$useDragDropManager=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var react_1=require("module$node_modules$react$index"),invariant_1=global(require("module$node_modules$invariant$browser")),DndContext_1=require("module$node_modules$react_dnd_cjs$lib$common$DndContext");exports.useDragDropManager=
function(){var dragDropManager=react_1.useContext(DndContext_1.DndContext).dragDropManager;invariant_1.default(null!=dragDropManager,"Expected drag drop context");return dragDropManager}}
//# sourceMappingURL=module$node_modules$react_dnd_cjs$lib$hooks$internal$useDragDropManager.js.map
