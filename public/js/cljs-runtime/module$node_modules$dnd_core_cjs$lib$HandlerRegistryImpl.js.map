{
"version":3,
"file":"module$node_modules$dnd_core_cjs$lib$HandlerRegistryImpl.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/dnd-core-cjs/lib/HandlerRegistryImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core_cjs$lib$HandlerRegistryImpl\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar asap_1 = __importDefault(require(\"asap\"));\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar registry_1 = require(\"./actions/registry\");\nvar getNextUniqueId_1 = __importDefault(require(\"./utils/getNextUniqueId\"));\nvar interfaces_1 = require(\"./interfaces\");\nvar contracts_1 = require(\"./contracts\");\nfunction getNextHandlerId(role) {\n    var id = getNextUniqueId_1.default().toString();\n    switch (role) {\n        case interfaces_1.HandlerRole.SOURCE:\n            return \"S\" + id;\n        case interfaces_1.HandlerRole.TARGET:\n            return \"T\" + id;\n        default:\n            throw new Error(\"Unknown Handler Role: \" + role);\n    }\n}\nfunction parseRoleFromHandlerId(handlerId) {\n    switch (handlerId[0]) {\n        case 'S':\n            return interfaces_1.HandlerRole.SOURCE;\n        case 'T':\n            return interfaces_1.HandlerRole.TARGET;\n        default:\n            invariant_1.default(false, \"Cannot parse handler ID: \" + handlerId);\n    }\n}\nfunction mapContainsValue(map, searchValue) {\n    var entries = map.entries();\n    var isDone = false;\n    do {\n        var _a = entries.next(), done = _a.done, _b = _a.value, value = _b[1];\n        if (value === searchValue) {\n            return true;\n        }\n        isDone = !!done;\n    } while (!isDone);\n    return false;\n}\nvar HandlerRegistryImpl = /** @class */ (function () {\n    function HandlerRegistryImpl(store) {\n        this.types = new Map();\n        this.dragSources = new Map();\n        this.dropTargets = new Map();\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n        this.store = store;\n    }\n    HandlerRegistryImpl.prototype.addSource = function (type, source) {\n        contracts_1.validateType(type);\n        contracts_1.validateSourceContract(source);\n        var sourceId = this.addHandler(interfaces_1.HandlerRole.SOURCE, type, source);\n        this.store.dispatch(registry_1.addSource(sourceId));\n        return sourceId;\n    };\n    HandlerRegistryImpl.prototype.addTarget = function (type, target) {\n        contracts_1.validateType(type, true);\n        contracts_1.validateTargetContract(target);\n        var targetId = this.addHandler(interfaces_1.HandlerRole.TARGET, type, target);\n        this.store.dispatch(registry_1.addTarget(targetId));\n        return targetId;\n    };\n    HandlerRegistryImpl.prototype.containsHandler = function (handler) {\n        return (mapContainsValue(this.dragSources, handler) ||\n            mapContainsValue(this.dropTargets, handler));\n    };\n    HandlerRegistryImpl.prototype.getSource = function (sourceId, includePinned) {\n        if (includePinned === void 0) { includePinned = false; }\n        invariant_1.default(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        var isPinned = includePinned && sourceId === this.pinnedSourceId;\n        var source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n        return source;\n    };\n    HandlerRegistryImpl.prototype.getTarget = function (targetId) {\n        invariant_1.default(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.dropTargets.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.getSourceType = function (sourceId) {\n        invariant_1.default(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        return this.types.get(sourceId);\n    };\n    HandlerRegistryImpl.prototype.getTargetType = function (targetId) {\n        invariant_1.default(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.types.get(targetId);\n    };\n    HandlerRegistryImpl.prototype.isSourceId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.SOURCE;\n    };\n    HandlerRegistryImpl.prototype.isTargetId = function (handlerId) {\n        var role = parseRoleFromHandlerId(handlerId);\n        return role === interfaces_1.HandlerRole.TARGET;\n    };\n    HandlerRegistryImpl.prototype.removeSource = function (sourceId) {\n        var _this = this;\n        invariant_1.default(this.getSource(sourceId), 'Expected an existing source.');\n        this.store.dispatch(registry_1.removeSource(sourceId));\n        asap_1.default(function () {\n            _this.dragSources.delete(sourceId);\n            _this.types.delete(sourceId);\n        });\n    };\n    HandlerRegistryImpl.prototype.removeTarget = function (targetId) {\n        invariant_1.default(this.getTarget(targetId), 'Expected an existing target.');\n        this.store.dispatch(registry_1.removeTarget(targetId));\n        this.dropTargets.delete(targetId);\n        this.types.delete(targetId);\n    };\n    HandlerRegistryImpl.prototype.pinSource = function (sourceId) {\n        var source = this.getSource(sourceId);\n        invariant_1.default(source, 'Expected an existing source.');\n        this.pinnedSourceId = sourceId;\n        this.pinnedSource = source;\n    };\n    HandlerRegistryImpl.prototype.unpinSource = function () {\n        invariant_1.default(this.pinnedSource, 'No source is pinned at the time.');\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    };\n    HandlerRegistryImpl.prototype.addHandler = function (role, type, handler) {\n        var id = getNextHandlerId(role);\n        this.types.set(id, type);\n        if (role === interfaces_1.HandlerRole.SOURCE) {\n            this.dragSources.set(id, handler);\n        }\n        else if (role === interfaces_1.HandlerRole.TARGET) {\n            this.dropTargets.set(id, handler);\n        }\n        return id;\n    };\n    return HandlerRegistryImpl;\n}());\nexports.default = HandlerRegistryImpl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseRoleFromHandlerId","handlerId","interfaces_1","HandlerRole","SOURCE","TARGET","invariant_1","default","mapContainsValue","map","searchValue","entries","_a","next","value","isDone","done","__importDefault","mod","__esModule","Object","defineProperty","asap_1","registry_1","getNextUniqueId_1","contracts_1","HandlerRegistryImpl","store","types","Map","dragSources","dropTargets","pinnedSource","pinnedSourceId","prototype","addSource","HandlerRegistryImpl.prototype.addSource","type","source","validateType","validateSourceContract","sourceId","addHandler","dispatch","addTarget","HandlerRegistryImpl.prototype.addTarget","target","validateTargetContract","targetId","containsHandler","HandlerRegistryImpl.prototype.containsHandler","handler","getSource","HandlerRegistryImpl.prototype.getSource","includePinned","isSourceId","get","getTarget","HandlerRegistryImpl.prototype.getTarget","isTargetId","getSourceType","HandlerRegistryImpl.prototype.getSourceType","getTargetType","HandlerRegistryImpl.prototype.getTargetType","HandlerRegistryImpl.prototype.isSourceId","role","HandlerRegistryImpl.prototype.isTargetId","removeSource","HandlerRegistryImpl.prototype.removeSource","_this","delete","removeTarget","HandlerRegistryImpl.prototype.removeTarget","pinSource","HandlerRegistryImpl.prototype.pinSource","unpinSource","HandlerRegistryImpl.prototype.unpinSource","HandlerRegistryImpl.prototype.addHandler","id","toString","Error","set"]
}
