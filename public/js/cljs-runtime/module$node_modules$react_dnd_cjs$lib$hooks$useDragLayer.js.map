{
"version":3,
"file":"module$node_modules$react_dnd_cjs$lib$hooks$useDragLayer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAErHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CACIO,qBAAuBP,OAAA,CAAQ,yEAAR,CAD3B,CAEIQ,eAAiBR,OAAA,CAAQ,mEAAR,CAarBE,QAAAO,aAAA,CARAA,QAAqB,CAACC,OAAD,CAAU,CAE3B,IAAIC,QADkBJ,oBAAAK,mBAAAC,EACRC,WAAA,EACVC;OAAAA,CAAKP,cAAAQ,aAAA,CAA4BL,OAA5B,CAAqCD,OAArC,CAHkB,KAG6BO,UAAYF,OAAA,CAAG,CAAH,CAHzC,CAGgDG,gBAAkBH,OAAA,CAAG,CAAH,CAC7FT,QAAAa,UAAA,CAAkB,QAAS,EAAG,CAAE,MAAOR,QAAAS,wBAAA,CAAgCF,eAAhC,CAAT,CAA9B,CACAZ,QAAAa,UAAA,CAAkB,QAAS,EAAG,CAAE,MAAOR,QAAAU,uBAAA,CAA+BH,eAA/B,CAAT,CAA9B,CACA,OAAOD,UANoB,CAVsF;",
"sources":["node_modules/react-dnd-cjs/lib/hooks/useDragLayer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_cjs$lib$hooks$useDragLayer\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar useDragDropManager_1 = require(\"./internal/useDragDropManager\");\nvar useCollector_1 = require(\"./internal/useCollector\");\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nfunction useDragLayer(collect) {\n    var dragDropManager = useDragDropManager_1.useDragDropManager();\n    var monitor = dragDropManager.getMonitor();\n    var _a = useCollector_1.useCollector(monitor, collect), collected = _a[0], updateCollected = _a[1];\n    react_1.useEffect(function () { return monitor.subscribeToOffsetChange(updateCollected); });\n    react_1.useEffect(function () { return monitor.subscribeToStateChange(updateCollected); });\n    return collected;\n}\nexports.useDragLayer = useDragLayer;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","react_1","useDragDropManager_1","useCollector_1","useDragLayer","collect","monitor","useDragDropManager","dragDropManager","getMonitor","_a","useCollector","collected","updateCollected","useEffect","subscribeToOffsetChange","subscribeToStateChange"]
}
