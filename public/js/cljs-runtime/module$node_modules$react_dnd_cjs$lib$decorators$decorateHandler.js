shadow$provide.module$node_modules$react_dnd_cjs$lib$decorators$decorateHandler=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=
null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),__assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);result["default"]=
mod;return result};module=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var React=global(require("module$node_modules$react$index")),shallowequal_1=module(require("module$node_modules$shallowequal$index")),invariant_1=module(require("module$node_modules$invariant$browser")),hoist_non_react_statics_1=module(require("module$node_modules$hoist_non_react_statics$dist$hoist_non_react_statics_cjs")),index_1=
require("module$node_modules$react_dnd_cjs$lib$index"),js_utils_1=require("module$node_modules$react_dnd_cjs$lib$utils$js_utils"),disposables_1=require("module$node_modules$react_dnd_cjs$lib$decorators$disposables"),utils_1=require("module$node_modules$react_dnd_cjs$lib$decorators$utils");exports.default=function(_a$jscomp$0){var DecoratedComponent=_a$jscomp$0.DecoratedComponent,createHandler=_a$jscomp$0.createHandler,createMonitor=_a$jscomp$0.createMonitor,createConnector=_a$jscomp$0.createConnector,
registerHandler=_a$jscomp$0.registerHandler,containerDisplayName=_a$jscomp$0.containerDisplayName,getType=_a$jscomp$0.getType,collect=_a$jscomp$0.collect;_a$jscomp$0=_a$jscomp$0.options.arePropsEqual;var arePropsEqual=void 0===_a$jscomp$0?shallowequal_1.default:_a$jscomp$0,displayName=DecoratedComponent.displayName||DecoratedComponent.name||"Component";_a$jscomp$0=function(_super){function DragDropContainer(props){var _this=_super.call(this,props)||this;_this.decoratedRef=React.createRef();_this.handleChange=
function(){var nextState=_this.getCurrentState();shallowequal_1.default(nextState,_this.state)||_this.setState(nextState)};_this.disposable=new disposables_1.SerialDisposable;_this.receiveProps(props);_this.dispose();return _this}__extends(DragDropContainer,_super);DragDropContainer.prototype.getHandlerId=function(){return this.handlerId};DragDropContainer.prototype.getDecoratedComponentInstance=function(){invariant_1.default(this.decoratedRef.current,"In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()");
return this.decoratedRef.current};DragDropContainer.prototype.shouldComponentUpdate=function(nextProps,nextState){return!arePropsEqual(nextProps,this.props)||!shallowequal_1.default(nextState,this.state)};DragDropContainer.prototype.componentDidMount=function(){this.disposable=new disposables_1.SerialDisposable;this.currentType=void 0;this.receiveProps(this.props);this.handleChange()};DragDropContainer.prototype.componentDidUpdate=function(prevProps){arePropsEqual(this.props,prevProps)||(this.receiveProps(this.props),
this.handleChange())};DragDropContainer.prototype.componentWillUnmount=function(){this.dispose()};DragDropContainer.prototype.receiveProps=function(props){this.handler&&(this.handler.receiveProps(props),this.receiveType(getType(props)))};DragDropContainer.prototype.receiveType=function(type){if(this.handlerMonitor&&this.manager&&this.handlerConnector&&type!==this.currentType){this.currentType=type;var _a=registerHandler(type,this.handler,this.manager);type=_a[0];_a=_a[1];this.handlerId=type;this.handlerMonitor.receiveHandlerId(type);
this.handlerConnector.receiveHandlerId(type);type=this.manager.getMonitor().subscribeToStateChange(this.handleChange,{handlerIds:[type]});this.disposable.setDisposable(new disposables_1.CompositeDisposable(new disposables_1.Disposable(type),new disposables_1.Disposable(_a)))}};DragDropContainer.prototype.dispose=function(){this.disposable.dispose();this.handlerConnector&&this.handlerConnector.receiveHandlerId(null)};DragDropContainer.prototype.getCurrentState=function(){if(!this.handlerConnector)return{};
var nextState=collect(this.handlerConnector.hooks,this.handlerMonitor,this.props);invariant_1.default(js_utils_1.isPlainObject(nextState),"Expected `collect` specified as the second argument to %s for %s to return a plain object of props to inject. Instead, received %s.",containerDisplayName,displayName,nextState);return nextState};DragDropContainer.prototype.render=function(){var _this=this;return React.createElement(index_1.DndContext.Consumer,null,function(_a){_this.receiveDragDropManager(_a.dragDropManager);
"undefined"!==typeof requestAnimationFrame&&requestAnimationFrame(function(){return _this.handlerConnector.reconnect()});return React.createElement(DecoratedComponent,__assign({},_this.props,_this.getCurrentState(),{ref:utils_1.isRefable(DecoratedComponent)?_this.decoratedRef:null}))})};DragDropContainer.prototype.receiveDragDropManager=function(dragDropManager){void 0===this.manager&&(invariant_1.default(void 0!==dragDropManager,"Could not find the drag and drop manager in the context of %s. Make sure to render a DndProvider component in your top-level component. Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context",
displayName,displayName),void 0!==dragDropManager&&(this.manager=dragDropManager,this.handlerMonitor=createMonitor(dragDropManager),this.handlerConnector=createConnector(dragDropManager.getBackend()),this.handler=createHandler(this.handlerMonitor,this.decoratedRef)))};DragDropContainer.DecoratedComponent=DecoratedComponent;DragDropContainer.displayName=containerDisplayName+"("+displayName+")";return DragDropContainer}(React.Component);return hoist_non_react_statics_1.default(_a$jscomp$0,DecoratedComponent)}}
//# sourceMappingURL=module$node_modules$react_dnd_cjs$lib$decorators$decorateHandler.js.map
