shadow$provide.module$node_modules$react_dnd_cjs$lib$decorators$DragSource=function(global,require,module,exports){global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=global(require("module$node_modules$invariant$browser")),js_utils_1=require("module$node_modules$react_dnd_cjs$lib$utils$js_utils"),utils_1=require("module$node_modules$react_dnd_cjs$lib$decorators$utils"),decorateHandler_1=
global(require("module$node_modules$react_dnd_cjs$lib$decorators$decorateHandler")),registration_1=require("module$node_modules$react_dnd_cjs$lib$common$registration"),DragSourceMonitorImpl_1=require("module$node_modules$react_dnd_cjs$lib$common$DragSourceMonitorImpl"),SourceConnector_1=require("module$node_modules$react_dnd_cjs$lib$common$SourceConnector"),isValidType_1=require("module$node_modules$react_dnd_cjs$lib$utils$isValidType"),createSourceFactory_1=global(require("module$node_modules$react_dnd_cjs$lib$decorators$createSourceFactory"));
exports.DragSource=function(type,spec,collect,options){void 0===options&&(options={});utils_1.checkDecoratorArguments("DragSource","type, spec, collect[, options]",type,spec,collect,options);var getType=type;"function"!==typeof type&&(invariant_1.default(isValidType_1.isValidType(type),'Expected "type" provided as the first argument to DragSource to be a string, or a function that returns a string given the current props. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',
type),getType=function(){return type});invariant_1.default(js_utils_1.isPlainObject(spec),'Expected "spec" provided as the second argument to DragSource to be a plain object. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',spec);var createSource=createSourceFactory_1.default(spec);invariant_1.default("function"===typeof collect,'Expected "collect" provided as the third argument to DragSource to be a function that returns a plain object of props to inject. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',
collect);invariant_1.default(js_utils_1.isPlainObject(options),'Expected "options" provided as the fourth argument to DragSource to be a plain object when specified. Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source',collect);return function(DecoratedComponent){return decorateHandler_1.default({containerDisplayName:"DragSource",createHandler:createSource,registerHandler:registration_1.registerSource,createConnector:function(backend){return new SourceConnector_1.SourceConnector(backend)},
createMonitor:function(manager){return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager)},DecoratedComponent:DecoratedComponent,getType:getType,collect:collect,options:options})}}}
//# sourceMappingURL=module$node_modules$react_dnd_cjs$lib$decorators$DragSource.js.map
