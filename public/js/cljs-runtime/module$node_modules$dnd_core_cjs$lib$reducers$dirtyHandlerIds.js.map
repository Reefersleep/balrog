{
"version":3,
"file":"module$node_modules$dnd_core_cjs$lib$reducers$dirtyHandlerIds.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,WAAaN,OAAA,CAAQ,6DAAR,CAAjB,CACIO,WAAaP,OAAA,CAAQ,uDAAR,CADjB,CAEIQ,WAAaR,OAAA,CAAQ,qDAAR,CAFjB,CAGIS,YAAcT,OAAA,CAAQ,sDAAR,CAHlB,CAIIU,WAAaV,OAAA,CAAQ,qDAAR,CAsCjBE;OAAAS,QAAA,CArCAC,QAAwB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAEpC,OAAQA,MAAAC,KAAR,EACI,KAAKT,UAAAU,MAAL,CACI,KACJ,MAAKT,UAAAU,WAAL,CACA,KAAKV,UAAAW,WAAL,CACA,KAAKX,UAAAY,cAAL,CACA,KAAKZ,UAAAa,cAAL,CACI,MAAOX,YAAAY,KAKX,SACI,MAAOZ,YAAAa,IAbf,CAeIC,MAAAA,CAAKT,MAAAU,QAAgBC,MAAAA,CAAKF,MAAAG,UAAcA,MAAAA,CAAmB,IAAK,EAAZ,GAAAD,KAAA,CAAgB,EAAhB,CAAqBA,KAAIE,OAAAA,CAAKJ,MAAAK,cAAtF,KAAwGA,cAAuB,IAAK,EAAZ,GAAAD,MAAA,CAAgB,EAAhB,CAAqBA,MACzIE,OAAAA,CAASnB,UAAAoB,IAAA,CAAeJ,KAAf,CAA0BE,aAA1B,CAEb,IADgB,EAAgB,CAAhB,CAAAC,MAAAE,OAAA,CAChB,EADsCvB,UAAAwB,eAAA,CAA0BN,KAA1B;AAAqCE,aAArC,CACtC,CACI,MAAOnB,YAAAY,KAIPY,cAAAA,CAAwBL,aAAA,CAAcA,aAAAG,OAAd,CAAqC,CAArC,CACxBG,MAAAA,CAAoBR,KAAA,CAAUA,KAAAK,OAAV,CAA6B,CAA7B,CACpBE,cAAJ,GAA8BC,KAA9B,GACQD,aAGJ,EAFIJ,MAAAM,KAAA,CAAYF,aAAZ,CAEJ,CAAIC,KAAJ,EACIL,MAAAM,KAAA,CAAYD,KAAZ,CALR,CAQA,OAAOL,OAnC6B,CARkF;",
"sources":["node_modules/dnd-core-cjs/lib/reducers/dirtyHandlerIds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core_cjs$lib$reducers$dirtyHandlerIds\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dragDrop_1 = require(\"../actions/dragDrop\");\nvar registry_1 = require(\"../actions/registry\");\nvar equality_1 = require(\"../utils/equality\");\nvar dirtiness_1 = require(\"../utils/dirtiness\");\nvar js_utils_1 = require(\"../utils/js_utils\");\nfunction dirtyHandlerIds(state, action) {\n    if (state === void 0) { state = dirtiness_1.NONE; }\n    switch (action.type) {\n        case dragDrop_1.HOVER:\n            break;\n        case registry_1.ADD_SOURCE:\n        case registry_1.ADD_TARGET:\n        case registry_1.REMOVE_TARGET:\n        case registry_1.REMOVE_SOURCE:\n            return dirtiness_1.NONE;\n        case dragDrop_1.BEGIN_DRAG:\n        case dragDrop_1.PUBLISH_DRAG_SOURCE:\n        case dragDrop_1.END_DRAG:\n        case dragDrop_1.DROP:\n        default:\n            return dirtiness_1.ALL;\n    }\n    var _a = action.payload, _b = _a.targetIds, targetIds = _b === void 0 ? [] : _b, _c = _a.prevTargetIds, prevTargetIds = _c === void 0 ? [] : _c;\n    var result = js_utils_1.xor(targetIds, prevTargetIds);\n    var didChange = result.length > 0 || !equality_1.areArraysEqual(targetIds, prevTargetIds);\n    if (!didChange) {\n        return dirtiness_1.NONE;\n    }\n    // Check the target ids at the innermost position. If they are valid, add them\n    // to the result\n    var prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1];\n    var innermostTargetId = targetIds[targetIds.length - 1];\n    if (prevInnermostTargetId !== innermostTargetId) {\n        if (prevInnermostTargetId) {\n            result.push(prevInnermostTargetId);\n        }\n        if (innermostTargetId) {\n            result.push(innermostTargetId);\n        }\n    }\n    return result;\n}\nexports.default = dirtyHandlerIds;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","dragDrop_1","registry_1","equality_1","dirtiness_1","js_utils_1","default","dirtyHandlerIds","state","action","type","HOVER","ADD_SOURCE","ADD_TARGET","REMOVE_TARGET","REMOVE_SOURCE","NONE","ALL","_a","payload","_b","targetIds","_c","prevTargetIds","result","xor","length","areArraysEqual","prevInnermostTargetId","innermostTargetId","push"]
}
