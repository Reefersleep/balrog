{
"version":3,
"file":"module$node_modules$react_dnd_cjs$lib$common$DropTargetMonitorImpl.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/react-dnd-cjs/lib/common/DropTargetMonitorImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_cjs$lib$common$DropTargetMonitorImpl\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar isCallingCanDrop = false;\nvar DropTargetMonitorImpl = /** @class */ (function () {\n    function DropTargetMonitorImpl(manager) {\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    DropTargetMonitorImpl.prototype.receiveHandlerId = function (targetId) {\n        this.targetId = targetId;\n    };\n    DropTargetMonitorImpl.prototype.getHandlerId = function () {\n        return this.targetId;\n    };\n    DropTargetMonitorImpl.prototype.subscribeToStateChange = function (listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    };\n    DropTargetMonitorImpl.prototype.canDrop = function () {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant_1.default(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        }\n        finally {\n            isCallingCanDrop = false;\n        }\n    };\n    DropTargetMonitorImpl.prototype.isOver = function (options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    };\n    DropTargetMonitorImpl.prototype.getItemType = function () {\n        return this.internalMonitor.getItemType();\n    };\n    DropTargetMonitorImpl.prototype.getItem = function () {\n        return this.internalMonitor.getItem();\n    };\n    DropTargetMonitorImpl.prototype.getDropResult = function () {\n        return this.internalMonitor.getDropResult();\n    };\n    DropTargetMonitorImpl.prototype.didDrop = function () {\n        return this.internalMonitor.didDrop();\n    };\n    DropTargetMonitorImpl.prototype.getInitialClientOffset = function () {\n        return this.internalMonitor.getInitialClientOffset();\n    };\n    DropTargetMonitorImpl.prototype.getInitialSourceClientOffset = function () {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    };\n    DropTargetMonitorImpl.prototype.getSourceClientOffset = function () {\n        return this.internalMonitor.getSourceClientOffset();\n    };\n    DropTargetMonitorImpl.prototype.getClientOffset = function () {\n        return this.internalMonitor.getClientOffset();\n    };\n    DropTargetMonitorImpl.prototype.getDifferenceFromInitialOffset = function () {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    };\n    return DropTargetMonitorImpl;\n}());\nexports.DropTargetMonitorImpl = DropTargetMonitorImpl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","invariant_1","isCallingCanDrop","DropTargetMonitorImpl","manager","targetId","internalMonitor","getMonitor","prototype","receiveHandlerId","DropTargetMonitorImpl.prototype.receiveHandlerId","getHandlerId","DropTargetMonitorImpl.prototype.getHandlerId","subscribeToStateChange","DropTargetMonitorImpl.prototype.subscribeToStateChange","listener","options","canDrop","DropTargetMonitorImpl.prototype.canDrop","default","canDropOnTarget","isOver","DropTargetMonitorImpl.prototype.isOver","isOverTarget","getItemType","DropTargetMonitorImpl.prototype.getItemType","getItem","DropTargetMonitorImpl.prototype.getItem","getDropResult","DropTargetMonitorImpl.prototype.getDropResult","didDrop","DropTargetMonitorImpl.prototype.didDrop","getInitialClientOffset","DropTargetMonitorImpl.prototype.getInitialClientOffset","getInitialSourceClientOffset","DropTargetMonitorImpl.prototype.getInitialSourceClientOffset","getSourceClientOffset","DropTargetMonitorImpl.prototype.getSourceClientOffset","getClientOffset","DropTargetMonitorImpl.prototype.getClientOffset","getDifferenceFromInitialOffset","DropTargetMonitorImpl.prototype.getDifferenceFromInitialOffset"]
}
