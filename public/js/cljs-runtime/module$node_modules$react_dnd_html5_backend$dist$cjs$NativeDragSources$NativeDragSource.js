shadow$provide.module$node_modules$react_dnd_html5_backend$dist$cjs$NativeDragSources$NativeDragSource=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,
protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,"__esModule",{value:!0});exports.NativeDragSource=void 0;global=function(){function NativeDragSource(config){if(!(this instanceof NativeDragSource))throw new TypeError("Cannot call a class as a function");this.config=config;this.item={};this.initializeExposedProperties()}_createClass(NativeDragSource,[{key:"initializeExposedProperties",value:function(){var _this=this;Object.keys(this.config.exposeProperties).forEach(function(property){Object.defineProperty(_this.item,
property,{configurable:!0,enumerable:!0,get:function(){console.warn("Browser doesn't allow reading \"".concat(property,'" until the drop event.'));return null}})})}},{key:"loadDataTransfer",value:function(dataTransfer){var _this2=this;if(dataTransfer){var newProperties={};Object.keys(this.config.exposeProperties).forEach(function(property){newProperties[property]={value:_this2.config.exposeProperties[property](dataTransfer,_this2.config.matchesTypes),configurable:!0,enumerable:!0}});Object.defineProperties(this.item,
newProperties)}}},{key:"canDrag",value:function(){return!0}},{key:"beginDrag",value:function(){return this.item}},{key:"isDragging",value:function(monitor,handle){return handle===monitor.getSourceId()}},{key:"endDrag",value:function(){}}]);return NativeDragSource}();exports.NativeDragSource=global}
//# sourceMappingURL=module$node_modules$react_dnd_html5_backend$dist$cjs$NativeDragSources$NativeDragSource.js.map
