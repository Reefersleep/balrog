shadow$provide.module$node_modules$dnd_core_cjs$lib$contracts=function(global,require,module,exports){function validateType(type,allowArray){allowArray&&Array.isArray(type)?type.forEach(function(t){return validateType(t,!1)}):invariant_1.default("string"===typeof type||"symbol"===typeof type,allowArray?"Type can only be a string, a symbol, or an array of either.":"Type can only be a string or a symbol.")}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};
Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=global(require("module$node_modules$invariant$browser"));exports.validateSourceContract=function(source){invariant_1.default("function"===typeof source.canDrag,"Expected canDrag to be a function.");invariant_1.default("function"===typeof source.beginDrag,"Expected beginDrag to be a function.");invariant_1.default("function"===typeof source.endDrag,"Expected endDrag to be a function.")};exports.validateTargetContract=function(target){invariant_1.default("function"===
typeof target.canDrop,"Expected canDrop to be a function.");invariant_1.default("function"===typeof target.hover,"Expected hover to be a function.");invariant_1.default("function"===typeof target.drop,"Expected beginDrag to be a function.")};exports.validateType=validateType}
//# sourceMappingURL=module$node_modules$dnd_core_cjs$lib$contracts.js.map
