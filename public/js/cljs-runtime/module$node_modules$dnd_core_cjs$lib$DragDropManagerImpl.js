shadow$provide.module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl=function(global,require,module,exports){function makeStoreInstance(debugMode){var reduxDevTools="undefined"!==typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__;return redux_1.createStore(reducers_1.default,debugMode&&reduxDevTools&&reduxDevTools({name:"dnd-core",instanceId:"dnd-core"}))}global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",
{value:!0});var redux_1=require("module$node_modules$redux$lib$redux"),reducers_1=global(require("module$node_modules$dnd_core_cjs$lib$reducers$index")),dragDrop_1=global(require("module$node_modules$dnd_core_cjs$lib$actions$dragDrop$index")),DragDropMonitorImpl_1=global(require("module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl")),HandlerRegistryImpl_1=global(require("module$node_modules$dnd_core_cjs$lib$HandlerRegistryImpl"));require=function(){function DragDropManagerImpl(debugMode){var _this=
this;void 0===debugMode&&(debugMode=!1);this.isSetUp=!1;this.handleRefCountChange=function(){var shouldSetUp=0<_this.store.getState().refCount;_this.backend&&(shouldSetUp&&!_this.isSetUp?(_this.backend.setup(),_this.isSetUp=!0):!shouldSetUp&&_this.isSetUp&&(_this.backend.teardown(),_this.isSetUp=!1))};this.store=debugMode=makeStoreInstance(debugMode);this.monitor=new DragDropMonitorImpl_1.default(debugMode,new HandlerRegistryImpl_1.default(debugMode));debugMode.subscribe(this.handleRefCountChange)}
DragDropManagerImpl.prototype.receiveBackend=function(backend){this.backend=backend};DragDropManagerImpl.prototype.getMonitor=function(){return this.monitor};DragDropManagerImpl.prototype.getBackend=function(){return this.backend};DragDropManagerImpl.prototype.getRegistry=function(){return this.monitor.registry};DragDropManagerImpl.prototype.getActions=function(){function bindActionCreator(actionCreator){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];args=actionCreator.apply(manager,
args);"undefined"!==typeof args&&dispatch(args)}}var manager=this,dispatch=this.store.dispatch,actions=dragDrop_1.default(this);return Object.keys(actions).reduce(function(boundActions,key){boundActions[key]=bindActionCreator(actions[key]);return boundActions},{})};DragDropManagerImpl.prototype.dispatch=function(action){this.store.dispatch(action)};return DragDropManagerImpl}();exports.default=require}
//# sourceMappingURL=module$node_modules$dnd_core_cjs$lib$DragDropManagerImpl.js.map
