{
"version":3,
"file":"module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjHC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAAA,gBAA3BA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAAC,WAAR,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,YAAcN,MAAA,CAAgBH,OAAA,CAAQ,uCAAR,CAAhB,CAAlB,CACIU,cAAgBP,MAAA,CAAgBH,OAAA,CAAQ,wDAAR,CAAhB,CADpB,CAEIW,SAAWX,OAAA,CAAQ,mDAAR,CAFf,CAGIY;AAAcZ,OAAA,CAAQ,sDAAR,CACda,QAAAA,CAAqC,QAAS,EAAG,CACjDA,QAASA,oBAAmB,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC1C,IAAAD,MAAA,CAAaA,KACb,KAAAC,SAAA,CAAgBA,QAF0B,CAI9CF,mBAAAG,UAAAC,uBAAA,CAAuDC,QAAS,CAACC,QAAD,CAAWC,OAAX,CAAoB,CAChF,IAAIC,MAAQ,IACI,KAAK,EAArB,GAAID,OAAJ,GAA0BA,OAA1B,CAAoC,CAAEE,WAAYC,IAAAA,EAAd,CAApC,CACA,KAAID,WAAaF,OAAAE,WACjBb,YAAAe,QAAA,CAAwC,UAAxC,GAAoB,MAAOL,SAA3B,CAAoD,8BAApD,CACAV,YAAAe,QAAA,CAA0C,WAA1C,GAAoB,MAAOF,WAA3B,EAAyDG,KAAAC,QAAA,CAAcJ,UAAd,CAAzD;AAAoF,0DAApF,CACA,KAAIK,YAAc,IAAAb,MAAAc,SAAA,EAAAC,QAgBlB,OAAO,KAAAf,MAAAgB,UAAA,CAfYC,QAAS,EAAG,CAC3B,IAAIC,MAAQX,KAAAP,MAAAc,SAAA,EAAZ,CACIK,eAAiBD,KAAAH,QACrB,IAAI,CACsBI,cAGtB,GAHyCN,WAGzC,EAFKM,cAEL,GAFwBN,WAExB,CAFsC,CAEtC,EADQ,CAACf,WAAAsB,SAAA,CAAqBF,KAAAG,gBAArB,CAA4Cb,UAA5C,CACT,EACIH,QAAA,EALJ,CAAJ,OAQQ,CACJQ,WAAA,CAAcM,cADV,CAXmB,CAexB,CAtByE,CAwBpFpB,oBAAAG,UAAAoB,wBAAA,CAAwDC,QAAS,CAAClB,QAAD,CAAW,CACxE,IAAIE,MAAQ,IACZZ,YAAAe,QAAA,CAAwC,UAAxC;AAAoB,MAAOL,SAA3B,CAAoD,8BAApD,CACA,KAAImB,cAAgB,IAAAxB,MAAAc,SAAA,EAAAW,WASpB,OAAO,KAAAzB,MAAAgB,UAAA,CARYC,QAAS,EAAG,CAC3B,IAAIS,UAAYnB,KAAAP,MAAAc,SAAA,EAAAW,WACZC,UAAJ,GAAkBF,aAAlB,GAGAA,aACA,CADgBE,SAChB,CAAArB,QAAA,EAJA,CAF2B,CAQxB,CAZiE,CAc5EN,oBAAAG,UAAAyB,cAAA,CAA8CC,QAAS,CAACC,QAAD,CAAW,CAC9D,GAAI,CAACA,QAAL,CACI,MAAO,CAAA,CAEX,KAAIC,OAAS,IAAA7B,SAAA8B,UAAA,CAAwBF,QAAxB,CACblC,YAAAe,QAAA,CAAoBoB,MAApB,CAA4B,kCAA5B,CACA,OAAI,KAAAE,WAAA,EAAJ,CACW,CAAA,CADX,CAGOF,MAAAG,QAAA,CAAe,IAAf,CAAqBJ,QAArB,CATuD,CAWlE9B;mBAAAG,UAAAgC,gBAAA,CAAgDC,QAAS,CAACC,QAAD,CAAW,CAEhE,GAAI,CAACA,QAAL,CACI,MAAO,CAAA,CAEX,KAAIC,OAAS,IAAApC,SAAAqC,UAAA,CAAwBF,QAAxB,CACbzC,YAAAe,QAAA,CAAoB2B,MAApB,CAA4B,kCAA5B,CACA,IAAI,CAAC,IAAAL,WAAA,EAAL,EAA0B,IAAAO,QAAA,EAA1B,CACI,MAAO,CAAA,CAEX,KAAIC,WAAa,IAAAvC,SAAAwC,cAAA,CAA4BL,QAA5B,CAAjB,CACIM,gBAAkB,IAAAC,YAAA,EACtB,OAAQ/C,cAAAc,QAAA,CAAsB8B,UAAtB,CAAkCE,eAAlC,CAAR,EAA8DL,MAAAO,QAAA,CAAe,IAAf,CAAqBR,QAArB,CAZE,CAcpErC,oBAAAG,UAAA8B,WAAA,CAA2Ca,QAAS,EAAG,CACnD,MAAO,CAAA,CAAQ,IAAAF,YAAA,EADoC,CAGvD5C,oBAAAG,UAAA4C,iBAAA;AAAiDC,QAAS,CAAClB,QAAD,CAAW,CAEjE,GAAI,CAACA,QAAL,CACI,MAAO,CAAA,CAEX,KAAIC,OAAS,IAAA7B,SAAA8B,UAAA,CAAwBF,QAAxB,CAAkC,CAAA,CAAlC,CACblC,YAAAe,QAAA,CAAoBoB,MAApB,CAA4B,kCAA5B,CACA,IAAI,CAAC,IAAAE,WAAA,EAAL,EAA0B,CAAC,IAAAgB,eAAA,EAA3B,CACI,MAAO,CAAA,CAEX,KAAIC,WAAa,IAAAhD,SAAAiD,cAAA,CAA4BrB,QAA5B,CAAjB,CACIa,gBAAkB,IAAAC,YAAA,EACtB,OAAIM,WAAJ,GAAmBP,eAAnB,CACW,CAAA,CADX,CAGOZ,MAAAE,WAAA,CAAkB,IAAlB,CAAwBH,QAAxB,CAf0D,CAiBrE9B,oBAAAG,UAAAiD,aAAA,CAA6CC,QAAS,CAAChB,QAAD,CAAW9B,OAAX,CAAoB,CACtD,IAAK,EAArB,GAAIA,OAAJ,GAA0BA,OAA1B,CAAoC,CAAE+C,QAAS,CAAA,CAAX,CAApC,CAEA,IAAI,CAACjB,QAAL,CACI,MAAO,CAAA,CAEPiB;OAAAA,CAAU/C,OAAA+C,QACd,IAAI,CAAC,IAAArB,WAAA,EAAL,CACI,MAAO,CAAA,CAEX,KAAIQ,WAAa,IAAAvC,SAAAwC,cAAA,CAA4BL,QAA5B,CAAjB,CACIM,gBAAkB,IAAAC,YAAA,EACtB,IAAID,eAAJ,EAAuB,CAAC9C,aAAAc,QAAA,CAAsB8B,UAAtB,CAAkCE,eAAlC,CAAxB,CACI,MAAO,CAAA,CAEPY,WAAAA,CAAY,IAAAC,aAAA,EAChB,IAAI,CAACD,UAAAE,OAAL,CACI,MAAO,CAAA,CAEPC,SAAAA,CAAQH,UAAAI,QAAA,CAAkBtB,QAAlB,CACZ,OAAIiB,QAAJ,CACWI,QADX,GACqBH,UAAAE,OADrB,CACwC,CADxC,CAImB,EAJnB,CAIWC,QAxB2D,CA2B1E1D,oBAAAG,UAAAyC,YAAA,CAA4CgB,QAAS,EAAG,CACpD,MAAO,KAAA3D,MAAAc,SAAA,EAAA8C,cAAAC,SAD6C,CAGxD9D,oBAAAG,UAAA4D,QAAA;AAAwCC,QAAS,EAAG,CAChD,MAAO,KAAA/D,MAAAc,SAAA,EAAA8C,cAAAI,KADyC,CAGpDjE,oBAAAG,UAAA+D,YAAA,CAA4CC,QAAS,EAAG,CACpD,MAAO,KAAAlE,MAAAc,SAAA,EAAA8C,cAAA/B,SAD6C,CAGxD9B,oBAAAG,UAAAqD,aAAA,CAA6CY,QAAS,EAAG,CACrD,MAAO,KAAAnE,MAAAc,SAAA,EAAA8C,cAAAN,UAD8C,CAGzDvD,oBAAAG,UAAAkE,cAAA,CAA8CC,QAAS,EAAG,CACtD,MAAO,KAAArE,MAAAc,SAAA,EAAA8C,cAAAU,WAD+C,CAG1DvE,oBAAAG,UAAAqC,QAAA,CAAwCgC,QAAS,EAAG,CAChD,MAAO,KAAAvE,MAAAc,SAAA,EAAA8C,cAAArB,QADyC,CAGpDxC,oBAAAG,UAAA8C,eAAA;AAA+CwB,QAAS,EAAG,CACvD,MAAO,KAAAxE,MAAAc,SAAA,EAAA8C,cAAAZ,eADgD,CAG3DjD,oBAAAG,UAAAuE,uBAAA,CAAuDC,QAAS,EAAG,CAC/D,MAAO,KAAA1E,MAAAc,SAAA,EAAAW,WAAAkD,oBADwD,CAGnE5E,oBAAAG,UAAA0E,6BAAA,CAA6DC,QAAS,EAAG,CACrE,MAAO,KAAA7E,MAAAc,SAAA,EAAAW,WAAAqD,0BAD8D,CAGzE/E,oBAAAG,UAAA6E,gBAAA,CAAgDC,QAAS,EAAG,CACxD,MAAO,KAAAhF,MAAAc,SAAA,EAAAW,WAAAwD,aADiD,CAG5DlF,oBAAAG,UAAAgF,sBAAA,CAAsDC,QAAS,EAAG,CAC9D,MAAOtF,SAAAqF,sBAAA,CAA+B,IAAAlF,MAAAc,SAAA,EAAAW,WAA/B,CADuD,CAGlE1B;mBAAAG,UAAAkF,+BAAA,CAA+DC,QAAS,EAAG,CACvE,MAAOxF,SAAAuF,+BAAA,CAAwC,IAAApF,MAAAc,SAAA,EAAAW,WAAxC,CADgE,CAG3E,OAAO1B,oBAvJ0C,CAAZ,EAyJzCX,QAAAsB,QAAA,CAAkBX,OAnKmG;",
"sources":["node_modules/dnd-core-cjs/lib/DragDropMonitorImpl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dnd_core_cjs$lib$DragDropMonitorImpl\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar matchesType_1 = __importDefault(require(\"./utils/matchesType\"));\nvar coords_1 = require(\"./utils/coords\");\nvar dirtiness_1 = require(\"./utils/dirtiness\");\nvar DragDropMonitorImpl = /** @class */ (function () {\n    function DragDropMonitorImpl(store, registry) {\n        this.store = store;\n        this.registry = registry;\n    }\n    DragDropMonitorImpl.prototype.subscribeToStateChange = function (listener, options) {\n        var _this = this;\n        if (options === void 0) { options = { handlerIds: undefined }; }\n        var handlerIds = options.handlerIds;\n        invariant_1.default(typeof listener === 'function', 'listener must be a function.');\n        invariant_1.default(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n        var prevStateId = this.store.getState().stateId;\n        var handleChange = function () {\n            var state = _this.store.getState();\n            var currentStateId = state.stateId;\n            try {\n                var canSkipListener = currentStateId === prevStateId ||\n                    (currentStateId === prevStateId + 1 &&\n                        !dirtiness_1.areDirty(state.dirtyHandlerIds, handlerIds));\n                if (!canSkipListener) {\n                    listener();\n                }\n            }\n            finally {\n                prevStateId = currentStateId;\n            }\n        };\n        return this.store.subscribe(handleChange);\n    };\n    DragDropMonitorImpl.prototype.subscribeToOffsetChange = function (listener) {\n        var _this = this;\n        invariant_1.default(typeof listener === 'function', 'listener must be a function.');\n        var previousState = this.store.getState().dragOffset;\n        var handleChange = function () {\n            var nextState = _this.store.getState().dragOffset;\n            if (nextState === previousState) {\n                return;\n            }\n            previousState = nextState;\n            listener();\n        };\n        return this.store.subscribe(handleChange);\n    };\n    DragDropMonitorImpl.prototype.canDragSource = function (sourceId) {\n        if (!sourceId) {\n            return false;\n        }\n        var source = this.registry.getSource(sourceId);\n        invariant_1.default(source, 'Expected to find a valid source.');\n        if (this.isDragging()) {\n            return false;\n        }\n        return source.canDrag(this, sourceId);\n    };\n    DragDropMonitorImpl.prototype.canDropOnTarget = function (targetId) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        var target = this.registry.getTarget(targetId);\n        invariant_1.default(target, 'Expected to find a valid target.');\n        if (!this.isDragging() || this.didDrop()) {\n            return false;\n        }\n        var targetType = this.registry.getTargetType(targetId);\n        var draggedItemType = this.getItemType();\n        return (matchesType_1.default(targetType, draggedItemType) && target.canDrop(this, targetId));\n    };\n    DragDropMonitorImpl.prototype.isDragging = function () {\n        return Boolean(this.getItemType());\n    };\n    DragDropMonitorImpl.prototype.isDraggingSource = function (sourceId) {\n        // undefined on initial render\n        if (!sourceId) {\n            return false;\n        }\n        var source = this.registry.getSource(sourceId, true);\n        invariant_1.default(source, 'Expected to find a valid source.');\n        if (!this.isDragging() || !this.isSourcePublic()) {\n            return false;\n        }\n        var sourceType = this.registry.getSourceType(sourceId);\n        var draggedItemType = this.getItemType();\n        if (sourceType !== draggedItemType) {\n            return false;\n        }\n        return source.isDragging(this, sourceId);\n    };\n    DragDropMonitorImpl.prototype.isOverTarget = function (targetId, options) {\n        if (options === void 0) { options = { shallow: false }; }\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        var shallow = options.shallow;\n        if (!this.isDragging()) {\n            return false;\n        }\n        var targetType = this.registry.getTargetType(targetId);\n        var draggedItemType = this.getItemType();\n        if (draggedItemType && !matchesType_1.default(targetType, draggedItemType)) {\n            return false;\n        }\n        var targetIds = this.getTargetIds();\n        if (!targetIds.length) {\n            return false;\n        }\n        var index = targetIds.indexOf(targetId);\n        if (shallow) {\n            return index === targetIds.length - 1;\n        }\n        else {\n            return index > -1;\n        }\n    };\n    DragDropMonitorImpl.prototype.getItemType = function () {\n        return this.store.getState().dragOperation.itemType;\n    };\n    DragDropMonitorImpl.prototype.getItem = function () {\n        return this.store.getState().dragOperation.item;\n    };\n    DragDropMonitorImpl.prototype.getSourceId = function () {\n        return this.store.getState().dragOperation.sourceId;\n    };\n    DragDropMonitorImpl.prototype.getTargetIds = function () {\n        return this.store.getState().dragOperation.targetIds;\n    };\n    DragDropMonitorImpl.prototype.getDropResult = function () {\n        return this.store.getState().dragOperation.dropResult;\n    };\n    DragDropMonitorImpl.prototype.didDrop = function () {\n        return this.store.getState().dragOperation.didDrop;\n    };\n    DragDropMonitorImpl.prototype.isSourcePublic = function () {\n        return this.store.getState().dragOperation.isSourcePublic;\n    };\n    DragDropMonitorImpl.prototype.getInitialClientOffset = function () {\n        return this.store.getState().dragOffset.initialClientOffset;\n    };\n    DragDropMonitorImpl.prototype.getInitialSourceClientOffset = function () {\n        return this.store.getState().dragOffset.initialSourceClientOffset;\n    };\n    DragDropMonitorImpl.prototype.getClientOffset = function () {\n        return this.store.getState().dragOffset.clientOffset;\n    };\n    DragDropMonitorImpl.prototype.getSourceClientOffset = function () {\n        return coords_1.getSourceClientOffset(this.store.getState().dragOffset);\n    };\n    DragDropMonitorImpl.prototype.getDifferenceFromInitialOffset = function () {\n        return coords_1.getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    };\n    return DragDropMonitorImpl;\n}());\nexports.default = DragDropMonitorImpl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","invariant_1","matchesType_1","coords_1","dirtiness_1","DragDropMonitorImpl","store","registry","prototype","subscribeToStateChange","DragDropMonitorImpl.prototype.subscribeToStateChange","listener","options","_this","handlerIds","undefined","default","Array","isArray","prevStateId","getState","stateId","subscribe","handleChange","state","currentStateId","areDirty","dirtyHandlerIds","subscribeToOffsetChange","DragDropMonitorImpl.prototype.subscribeToOffsetChange","previousState","dragOffset","nextState","canDragSource","DragDropMonitorImpl.prototype.canDragSource","sourceId","source","getSource","isDragging","canDrag","canDropOnTarget","DragDropMonitorImpl.prototype.canDropOnTarget","targetId","target","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","canDrop","DragDropMonitorImpl.prototype.isDragging","isDraggingSource","DragDropMonitorImpl.prototype.isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","DragDropMonitorImpl.prototype.isOverTarget","shallow","targetIds","getTargetIds","length","index","indexOf","DragDropMonitorImpl.prototype.getItemType","dragOperation","itemType","getItem","DragDropMonitorImpl.prototype.getItem","item","getSourceId","DragDropMonitorImpl.prototype.getSourceId","DragDropMonitorImpl.prototype.getTargetIds","getDropResult","DragDropMonitorImpl.prototype.getDropResult","dropResult","DragDropMonitorImpl.prototype.didDrop","DragDropMonitorImpl.prototype.isSourcePublic","getInitialClientOffset","DragDropMonitorImpl.prototype.getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","DragDropMonitorImpl.prototype.getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","DragDropMonitorImpl.prototype.getClientOffset","clientOffset","getSourceClientOffset","DragDropMonitorImpl.prototype.getSourceClientOffset","getDifferenceFromInitialOffset","DragDropMonitorImpl.prototype.getDifferenceFromInitialOffset"]
}
