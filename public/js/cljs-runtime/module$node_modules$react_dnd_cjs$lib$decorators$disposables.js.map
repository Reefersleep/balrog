{
"version":3,
"file":"module$node_modules$react_dnd_cjs$lib$decorators$disposables.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/react-dnd-cjs/lib/decorators/disposables.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_dnd_cjs$lib$decorators$disposables\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar js_utils_1 = require(\"../utils/js_utils\");\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable(action) {\n        this.isDisposed = false;\n        this.action = js_utils_1.isFunction(action) ? action : js_utils_1.noop;\n    }\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    Disposable.isDisposable = function (d) {\n        return d && js_utils_1.isFunction(d.dispose);\n    };\n    Disposable._fixup = function (result) {\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\n    };\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n    Disposable.create = function (action) {\n        return new Disposable(action);\n    };\n    /** Performs the task of cleaning up resources. */\n    Disposable.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.action();\n            this.isDisposed = true;\n        }\n    };\n    /**\n     * Gets the disposable that does nothing when disposed.\n     */\n    Disposable.empty = { dispose: js_utils_1.noop };\n    return Disposable;\n}());\nexports.Disposable = Disposable;\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\nvar CompositeDisposable = /** @class */ (function () {\n    function CompositeDisposable() {\n        var disposables = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            disposables[_i] = arguments[_i];\n        }\n        this.isDisposed = false;\n        this.disposables = disposables;\n    }\n    /**\n     * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n     * @param {Any} item Disposable to add.\n     */\n    CompositeDisposable.prototype.add = function (item) {\n        if (this.isDisposed) {\n            item.dispose();\n        }\n        else {\n            this.disposables.push(item);\n        }\n    };\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n    CompositeDisposable.prototype.remove = function (item) {\n        var shouldDispose = false;\n        if (!this.isDisposed) {\n            var idx = this.disposables.indexOf(item);\n            if (idx !== -1) {\n                shouldDispose = true;\n                this.disposables.splice(idx, 1);\n                item.dispose();\n            }\n        }\n        return shouldDispose;\n    };\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n    CompositeDisposable.prototype.clear = function () {\n        if (!this.isDisposed) {\n            var len = this.disposables.length;\n            var currentDisposables = new Array(len);\n            for (var i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (var i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    };\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n    CompositeDisposable.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            var len = this.disposables.length;\n            var currentDisposables = new Array(len);\n            for (var i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (var i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    };\n    return CompositeDisposable;\n}());\nexports.CompositeDisposable = CompositeDisposable;\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\nvar SerialDisposable = /** @class */ (function () {\n    function SerialDisposable() {\n        this.isDisposed = false;\n    }\n    /**\n     * Gets the underlying disposable.\n     * @returns {Any} the underlying disposable.\n     */\n    SerialDisposable.prototype.getDisposable = function () {\n        return this.current;\n    };\n    SerialDisposable.prototype.setDisposable = function (value) {\n        var shouldDispose = this.isDisposed;\n        if (!shouldDispose) {\n            var old = this.current;\n            this.current = value;\n            if (old) {\n                old.dispose();\n            }\n        }\n        if (shouldDispose && value) {\n            value.dispose();\n        }\n    };\n    /** Performs the task of cleaning up resources. */\n    SerialDisposable.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            var old = this.current;\n            this.current = undefined;\n            if (old) {\n                old.dispose();\n            }\n        }\n    };\n    return SerialDisposable;\n}());\nexports.SerialDisposable = SerialDisposable;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","js_utils_1","Disposable","action","isDisposed","isFunction","noop","isDisposable","Disposable.isDisposable","d","dispose","_fixup","Disposable._fixup","result","empty","create","Disposable.create","prototype","Disposable.prototype.dispose","CompositeDisposable","disposables","_i","arguments","length","add","CompositeDisposable.prototype.add","item","push","remove","CompositeDisposable.prototype.remove","shouldDispose","idx","indexOf","splice","clear","CompositeDisposable.prototype.clear","len","currentDisposables","Array","i","CompositeDisposable.prototype.dispose","SerialDisposable","getDisposable","SerialDisposable.prototype.getDisposable","current","setDisposable","SerialDisposable.prototype.setDisposable","old","SerialDisposable.prototype.dispose","undefined"]
}
